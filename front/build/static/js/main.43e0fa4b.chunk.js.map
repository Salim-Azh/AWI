{"version":3,"sources":["public/urlApi.js","component/games/Game.js","component/editor/EditorGame.js","component/games/GamesHandler.js","component/editor/Editor.js","component/editor/EditorHandler.js","component/reservations/Reservation.js","component/reservations/ReservationHandler.js","component/editor/exhibitor/Exhibitor.js","component/editor/exhibitor/ExhibitorHandler.js","component/zone/Zone.js","component/zone/ZonesHandler.js","component/festivals/FestivalHandler.js","component/festivals/Festival.js","component/bills/Bill.js","component/bills/BillHandler.js","component/signIn/FormSignIn.js","component/search/Search.js","component/search/Filter.js","component/festivals/FestivalTable.js","public/img/addFiles.svg","component/editor/EditorForm.js","component/games/GameForm.js","component/festivals/FestivalForm.js","component/reservations/ReservationForm.js","component/reservations/gamesBooked/GamesBookedForm.js","component/zone/ZoneForm.js","component/zone/GameZoneForm.js","component/Modal/FormContainer.js","component/festivals/FilteredFestivalsTable.js","component/bills/BillTable.js","component/bills/FilteredBillsTable.js","component/editor/EditorTable.js","component/editor/exhibitor/ExhibitorTable.js","component/editor/FilteredEditorsTable.js","component/editor/EditorTabs.js","component/reservations/ReservationTable.js","component/search/FilterCheck.js","component/reservations/FilteredReservationsTable.js","component/reservations/TabsReservations.js","component/editor/EditorGamesTable.js","component/editor/EditorDetail.js","component/games/GameDetail.js","component/reservations/gamesBooked/GamesBooked.js","component/reservations/gamesBooked/GamesBookedTable.js","component/reservations/ReservationDetail.js","component/games/GameTable.js","component/games/FilteredGamesTable.js","component/games/TabsGames.js","component/zone/ZoneTable.js","component/zone/FilteredZonesTable.js","component/zone/ZoneDetail.js","App.js","reportWebVitals.js","index.js"],"names":["Games","Editors","Festivals","Reservations","Bills","Exhibitors","Zones","login","Game","props","editor","game","id","_id","Nav","Link","href","name","state","category","duration","min_yearold","type","onClick","deleteGame","value","EditorGame","_handleDelete","apiUrl","require","getGamesFromDB","fetch","then","r","json","response","catch","e","console","log","stack","message","getGameFromDB","gameId","getFestivalGames","createGame","fromZone","createGameFromEditor","createGames","games","rows","map","push","filterGamesByName","filterText","toLowerCase","includes","filterGamesByCategory","filterGamesByZone","zone","filterGamesByState","filterGamesByEditor","addGames","param","headers","method","body","JSON","stringify","setHandleDelete","handler","event","target","updateGame","Editor","_handleUpdate","contacts","checked","isEditor","onChange","handleEditor","isExhibitor","isPotential","deleteEditor","getEditorsFromDB","getEditorFromDB","getGamesFromEditor","editorId","createEditor","updateEditorState","filterEditorByName","editors","filterEditorByEditorOnly","filterEditorByPotentialOnly","filterEditorByExhibitorOnly","addEditor","setHandleUpdate","updateEditor","Reservation","_addHandler","_handleUpdateCheck","sumTable","reservation","nb_t_premium","nb_t_standard","nb_t_low","sumSquareMeters","nb_sm_premium","nb_sm_standard","nb_sm_low","exhibitor","comment","need_volunteer","handleChange","isEditorHere","reportSent","price","Button","variant","handleDelete","getReservationsFromDB","getReservationFromDB","reservationId","filterReservationByName","reservations","filterReservationByState","filterEditorByVolunteer","filterEditorByEditorPresent","filterEditorByReportSent","mapCreateReservation","deleteReservation","updateReservationCheck","setAddHandler","addReservation","setUpdateHandlerCheck","updateReservation","Exhibitor","handleAddReservation","bind","this","split","Component","ReservationHandler","getExhibitorsFromDB","exhibitors","createExhibitor","Zone","label","sm_capacity","deleteZone","getZonesFromDB","getZoneFromDB","zoneId","createZone","filterZonesByName","zones","addZones","updateZone","Festival","festival","f","premium_t_price","standard_t_price","low_t_price","premium_sm_price","standard_sm_price","low_sm_price","is_current","nb_rt_premium","nb_rt_standard","nb_rt_low","nb_rsm_premium","nb_rsm_standard","nb_rsm_low","submit","setCurrent","setState","handleUpdate","handleUpdateCurrent","Card","Body","Header","Title","year","Text","Table","FormControl","as","readOnly","deleteFestival","getFestivalsFromDB","createFestival","color","Row","style","margin","bg","updateFestival","updateCurrent","filterFestivalByName","festivals","filterFestivalByYear","toString","addFestival","festivalId","Bill","contact","deleteBill","getBillsFromDB","bills","filterBillByName","bill","createBill","addBill","billId","urlApi","FormSignIn","email","pwd","handleSubmit","formIsUnchanged","params","res","d","Date","setTime","getTime","document","cookie","token","toUTCString","redirect","to","Form","FormLabel","placeholder","SearchBar","handleFilterTextChange","onFilterTextChange","textField","filter","french","Filter","listFilter","filters","english","handleFilterChange","onFilterChange","FestivalHandler","FestivalTable","EditorForm","handleContactsChange","addContact","removeContacts","index","pop","handleClick","FormGroup","Label","Check","EditorHandler","GameForm","editorName","countPlayer","prototype","placed","recieved","date","handleEditorChange","undefined","firstRow","cat","toUpperCase","min","FestivalForm","isCurrent","ExhibitorHandler","ReservationForm","handleExhibitorChange","GameHandler","GamesBookedForm","handleAddGames","handleGameChange","form","editorRows","editorGamesDefined","editorGames","length","ZoneForm","capacity","gameSelected","useState","FormContainer","show","setShow","handleClose","component","GameZoneForm","src","img","alt","Modal","onHide","backdrop","keyboard","closeButton","title","Footer","FilterableFestivalsTable","filterEnglish","filterFrench","handleAddFestival","striped","bordered","hover","Search","width","BillHandler","BillTable","size","FilterableBillsTable","handleAddBill","EditorTable","editorOnly","exhibitorOnly","FilterableEditorsTable","handleAddEditor","cardForm","search","table","showForm","showSearch","potentialOnly","ExhibitorTable","EditorTabs","attribute","Tabs","defaultActiveKey","Tab","eventKey","FilteredEditorsTable","ReservationTable","FilterCheck","onChecked","FilterableReservationsTable","handleFilterCheckedChange","TabsReservations","handleUpdateCheck","FilteredReservationsTable","EditorGamesTable","EditorDetail","handleAddGame","window","location","Col","GamesHandler","GameDetail","GamesBooked","optionsState","option","total_qte","max","exposed_qte","proto","GameBookedTable","ReservationDetail","talks","calculatedPrice","removeContact","calculatePrice","handleTalksChange","addTalk","removeTalk","handleDeleteGame","talk","className","lg","md","xs","height","marginTop","text","GamesBookedTable","GameTable","FilterableGamesTable","TabsGames","gamesBooked","FilteredGamesTable","ZoneHandler","ZoneTable","FilterableZonesTable","handleAddZone","ZonesHandler","ZoneDetail","gamesId","App","path","Navbar","expand","Brand","Toggle","aria-controls","Collapse","exact","FilteredFestivalsTable","FilteredZonesTable","FilteredBillsTable","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.43e0fa4b.chunk.js","sourcesContent":["export const Games = \"/api/games\"\r\nexport const Editors = \"/api/editors\"\r\nexport const Festivals = \"/api/festivals\"\r\nexport const Reservations = \"/api/festivals/reservations\"\r\nexport const Bills = \"/api/bills\"\r\nexport const Exhibitors = \"/api/exhibitors\"\r\nexport const Zones = \"/api/zones\"\r\nexport const login = \"/api/users/login\"\r\n","import {Nav} from \"react-bootstrap\"\r\n\r\nfunction Game(props) {\r\n\r\n    let editor = \"\"\r\n    if(props.editor) {\r\n        editor = props.editor\r\n    }\r\n\r\n    if(props.game.game) {\r\n        return (\r\n            <tr id={props.game.game._id}>\r\n                <td><Nav.Link href={\"/nav/jeu/\" + props.game.game._id}>{props.game.game.name}</Nav.Link></td>\r\n                <td>{editor}</td>\r\n                <td>{props.game.state}</td>\r\n                <td>{props.game.game.category}</td>\r\n                <td>{props.game.game.duration}</td>\r\n                <td>{props.game.game.min_yearold}</td>\r\n                <td/>\r\n                <td><input type={\"button\"} onClick={props.deleteGame} name={props.game.game._id} value={\"🗑\"}/></td>\r\n            </tr>\r\n        )\r\n    } else {\r\n        return (\r\n            <tr id={props.game._id}>\r\n                <td><Nav.Link href={\"/nav/jeu/\" + props.game._id}>{props.game.name}</Nav.Link></td>\r\n                <td>{editor}</td>\r\n                <td>{props.game.state}</td>\r\n                <td>{props.game.category}</td>\r\n                <td>{props.game.duration}</td>\r\n                <td>{props.game.min_yearold}</td>\r\n                <td/>\r\n                <td><input type={\"button\"} onClick={props.deleteGame} name={props.game._id} value={\"🗑\"}/></td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Game\r\n","import {Nav} from \"react-bootstrap\"\r\n\r\nfunction EditorGame(props) {\r\n    return (\r\n        <tr id={props.game._id}>\r\n            <td><Nav.Link href={\"/jeu/\" + props.game._id}>{props.game.name}</Nav.Link></td>\r\n            <td>{props.game.category}</td>\r\n            <td>{props.game.duration}</td>\r\n            <td>{props.game.min_yearold}</td>\r\n            <td><input type={\"button\"} onClick={props.deleteGame} name={props.game._id} value={\"🗑\"}/></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default EditorGame\r\n","import Game from \"./Game\";\r\nimport EditorGame from \"../editor/EditorGame\";\r\nconst apiUrl = require(\"../../public/urlApi\")\r\n\r\nexport function getGamesFromDB() {\r\n    return fetch(apiUrl.Games)\r\n        .then(r => r.json())\r\n        .then((response) => {\r\n            return response\r\n        })\r\n        .catch(e => {\r\n            console.log(e.stack)\r\n            console.log(e.message)\r\n        })\r\n}\r\n\r\nexport function getGameFromDB(gameId) {\r\n    return fetch(apiUrl.Games + \"/\" + gameId)\r\n        .then(r => r.json())\r\n        .then((response) => {\r\n            return response\r\n        })\r\n        .catch(e => {\r\n            console.log(e.stack)\r\n            console.log(e.message)\r\n        })\r\n}\r\n\r\nexport function getFestivalGames() {\r\n    return fetch(apiUrl.Festivals + \"/games\")\r\n        .then(r => r.json())\r\n        .then((response) => {\r\n            return response\r\n        })\r\n        .catch(e => {\r\n            console.log(e.stack)\r\n            console.log(e.message)\r\n        })\r\n}\r\n\r\nexport function createGame(game, fromZone) {\r\n    if(fromZone) {\r\n        return (\r\n            <Game\r\n                key={game._id}\r\n                game={game}\r\n                editor={game.editor}\r\n                deleteGame={_handleDelete}\r\n            />\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <Game\r\n                key={game._id}\r\n                game={game}\r\n                editor={game.editor}\r\n                deleteGame={deleteGame}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport function createGameFromEditor(game) {\r\n    return (\r\n        <EditorGame\r\n            key={game._id}\r\n            game={game}\r\n            deleteGame={deleteGame}\r\n        />\r\n    )\r\n}\r\n\r\nexport function createGames(games) {\r\n    let rows = []\r\n    if(games) {\r\n        games.map(game => {\r\n            if (game) {\r\n                rows.push(createGame(game, true))\r\n            }\r\n        })\r\n        return rows\r\n    }\r\n}\r\n\r\nexport function filterGamesByName(games, filterText) {\r\n    let rows = []\r\n    if(games) {\r\n        games.map(game => {\r\n            if(game.name) {\r\n                if (game && (game.name.toLowerCase().includes(filterText))) {\r\n                    rows.push(createGame(game))\r\n                }\r\n            } else {\r\n                if (game && (game.game.name.toLowerCase().includes(filterText))) {\r\n                    rows.push(createGame(game))\r\n                }\r\n            }\r\n        })\r\n        return rows\r\n    }\r\n}\r\n\r\nexport function filterGamesByCategory(games, filterText) {\r\n    let rows = []\r\n    if(games) {\r\n        games.map(game => {\r\n            if(game.name) {\r\n                if (game && (game.category.toLowerCase().includes(filterText))) {\r\n                    rows.push(createGame(game))\r\n                }\r\n            } else {\r\n                if (game && (game.game.category.toLowerCase().includes(filterText))) {\r\n                    rows.push(createGame(game))\r\n                }\r\n            }\r\n        })\r\n        return rows\r\n    }\r\n}\r\n\r\nexport function filterGamesByZone(games, filterText) {\r\n    let rows = []\r\n    if(games) {\r\n        games.map(game => {\r\n            if (game && (game.zone.toLowerCase().includes(filterText))) {\r\n                rows.push(createGame(game))\r\n            }\r\n        })\r\n        return rows\r\n    }\r\n}\r\n\r\nexport function filterGamesByState(games, filterText) {\r\n    let rows = []\r\n    if(games) {\r\n        games.map(game => {\r\n            if (game && (game.state.toLowerCase().includes(filterText))) {\r\n                rows.push(createGame(game))\r\n            }\r\n        })\r\n        return rows\r\n    }\r\n}\r\n\r\nexport function filterGamesByEditor(games, filterText) {\r\n    let rows = []\r\n    if(games) {\r\n        games.map(game => {\r\n            if (game && (game.editor.name.toLowerCase().includes(filterText))) {\r\n                rows.push(createGame(game))\r\n            }\r\n        })\r\n        return rows\r\n    }\r\n}\r\n\r\nexport function addGames(game) {\r\n    const param = {\r\n        headers: {'Content-Type': 'application/json'},\r\n        method: \"POST\",\r\n        body: JSON.stringify(game)\r\n    }\r\n    return fetch(apiUrl.Games, param)\r\n}\r\n\r\nlet _handleDelete\r\nexport function setHandleDelete(handler) {\r\n    _handleDelete = handler\r\n}\r\n\r\nexport function deleteGame(event) {\r\n    const gameId = event.target.name\r\n\r\n    return fetch(apiUrl.Games + \"/\" + gameId, { method: 'DELETE' })\r\n        .then(() => _handleDelete(gameId))\r\n}\r\n\r\nexport function updateGame(game) {\r\n    const param = {\r\n        headers: {'Content-Type': 'application/json'},\r\n        method: \"PUT\",\r\n        body: JSON.stringify(game)\r\n    }\r\n\r\n    return fetch(apiUrl.Games + \"/\" + game._id, param)\r\n}\r\n","import {Nav} from \"react-bootstrap\"\r\n\r\nfunction Editor(props) {\r\n    return (\r\n        <tr id={props._id}>\r\n            <td><Nav.Link href={\"/nav/editeur/\" + props._id}>{props.name}</Nav.Link></td>\r\n            <td>{props.state}</td>\r\n            <td>{props.contacts[0]}</td>\r\n            <td><input type={\"checkbox\"} checked={props.isEditor}\r\n                       onChange={props.handleEditor} id={props._id} name={\"isEditor\"}/></td>\r\n            <td><input type={\"checkbox\"} checked={props.isExhibitor}\r\n                       onChange={props.handleEditor} id={props._id} name={\"isExhibitor\"}/></td>\r\n            <td><input type={\"checkbox\"} checked={props.isPotential}\r\n                       onChange={props.handleEditor} id={props._id} name={\"isPotential\"}/></td>\r\n            <td><input type={\"button\"} onClick={props.deleteEditor} name={props._id} value={\"🗑\"}/></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Editor\r\n","import Editor from \"./Editor\";\r\nconst apiUrl = require(\"../../public/urlApi\")\r\n\r\nexport function getEditorsFromDB() {\r\n    return fetch(apiUrl.Editors)\r\n        .then(r => r.json())\r\n        .then(response => {\r\n            return response\r\n        })\r\n        .catch(e => {\r\n            console.log(e.stack)\r\n            console.log(e.message)\r\n        })\r\n}\r\n\r\nexport function getEditorFromDB(id) {\r\n    return fetch(apiUrl.Editors + \"/\" + id)\r\n        .then(r => r.json())\r\n        .then(response => {\r\n            return response\r\n        })\r\n        .catch(e => {\r\n            console.log(e.stack)\r\n            console.log(e.message)\r\n        })\r\n}\r\n\r\nexport function getGamesFromEditor(editorId) {\r\n    return fetch(apiUrl.Editors + \"/\" + editorId + \"/games/\")\r\n        .then(r => r.json())\r\n        .then(response => {\r\n            return response\r\n        })\r\n        .catch(e => {\r\n            console.log(e.stack)\r\n            console.log(e.message)\r\n        })\r\n}\r\n\r\nfunction createEditor(editor) {\r\n    return (\r\n        <Editor\r\n            key={editor._id}\r\n            _id={editor._id}\r\n            name={editor.name}\r\n            contacts={editor.contacts}\r\n            isEditor={editor.isEditor}\r\n            isExhibitor={editor.isExhibitor}\r\n            isPotential={editor.isPotential}\r\n            deleteEditor={deleteEditor}\r\n            handleEditor={updateEditorState}\r\n        />\r\n    )\r\n}\r\n\r\nexport function filterEditorByName(editors, filterText) {\r\n    let rows = []\r\n    if(editors) {\r\n        editors.map(editor => {\r\n            if (editor && (editor.name.toLowerCase().includes(filterText))) {\r\n                rows.push(createEditor(editor))\r\n            }\r\n        })\r\n        return rows\r\n    }\r\n}\r\n\r\nexport function filterEditorByEditorOnly(editors) {\r\n    let rows = []\r\n    if(editors) {\r\n        editors.map(editor => {\r\n            if (editor && (editor.isEditor)) {\r\n                rows.push(editor)\r\n            }\r\n        })\r\n        return filterEditorByPotentialOnly(rows)\r\n    }\r\n}\r\n\r\nexport function filterEditorByExhibitorOnly(editors) {\r\n    let rows = []\r\n    if(editors) {\r\n        editors.map(editor => {\r\n            if (editor && (editor.isExhibitor)) {\r\n                rows.push(editor)\r\n            }\r\n        })\r\n        return filterEditorByPotentialOnly(rows)\r\n    }\r\n}\r\n\r\nfunction filterEditorByPotentialOnly(editors) {\r\n    let rows = []\r\n    if(editors) {\r\n        editors.map(editor => {\r\n            if (editor && (editor.isPotential)) {\r\n                rows.push(createEditor(editor))\r\n            }\r\n        })\r\n        return rows\r\n    }\r\n}\r\n\r\nexport function addEditor(editor) {\r\n    const param = {\r\n        headers: {'Content-Type': 'application/json'},\r\n        method: \"POST\",\r\n        body: JSON.stringify(editor)\r\n    }\r\n    return fetch(apiUrl.Editors, param)\r\n}\r\n\r\nlet _handleDelete\r\nexport function setHandleDelete(handler) {\r\n    _handleDelete = handler\r\n}\r\n\r\nexport function deleteEditor(event) {\r\n    const editorId = event.target.name\r\n\r\n    fetch(apiUrl.Editors + \"/\" + editorId, { method: 'DELETE' })\r\n        .then(() => _handleDelete(editorId))\r\n}\r\n\r\nlet _handleUpdate\r\nexport function setHandleUpdate(handler) {\r\n    _handleUpdate = handler\r\n}\r\n\r\nexport function updateEditorState(event) {\r\n    const editorId = event.target.id\r\n    const checked = event.target.checked\r\n    const name = event.target.name\r\n\r\n    const body = {[name]: checked}\r\n    const param = {\r\n        headers: {'Content-Type': 'application/json'},\r\n        method: \"PUT\",\r\n        body: JSON.stringify(body)\r\n    }\r\n\r\n    return fetch(apiUrl.Editors + \"/\" + editorId, param)\r\n        .then(() => _handleUpdate(editorId, name, checked))\r\n}\r\n\r\nexport function updateEditor(editor) {\r\n    const param = {\r\n        headers: {'Content-Type': 'application/json'},\r\n        method: \"PUT\",\r\n        body: JSON.stringify(editor)\r\n    }\r\n\r\n    return fetch(apiUrl.Editors + \"/\" + editor._id, param)\r\n}\r\n","import {Button, Nav} from \"react-bootstrap\";\r\n\r\n\r\nfunction Reservation(props) {\r\n    let sumTable = props.reservation.nb_t_premium? props.reservation.nb_t_premium: 0 +\r\n    props.reservation.nb_t_standard? props.reservation.nb_t_standard: 0 +\r\n        props.reservation.nb_t_low? props.reservation.nb_t_low:0\r\n    if(!sumTable) {sumTable = 0}\r\n\r\n    let sumSquareMeters = props.reservation.nb_sm_premium? props.reservation.nb_sm_premium: 0 +\r\n        props.reservation.nb_sm_standard? props.reservation.nb_sm_standard: 0 +\r\n        props.reservation.nb_sm_low? props.reservation.nb_sm_low: 0\r\n    if(!sumSquareMeters) {sumSquareMeters = 0}\r\n\r\n    return (\r\n        <tr id={props.reservation._id}>\r\n            <td><Nav.Link href={\"/nav/reservation/\" + props.reservation._id}>{props.exhibitor.name}</Nav.Link></td>\r\n            <td>{props.reservation.comment}</td>\r\n            <td>{props.reservation.state}</td>\r\n\r\n            <td><input type={\"checkbox\"} checked={props.reservation.need_volunteer}\r\n                       onChange={props.handleChange} id={props.reservation._id}\r\n                       name={\"need_volunteer\"}/>\r\n            </td>\r\n\r\n            <td><input type={\"checkbox\"} checked={props.reservation.isEditorHere}\r\n                       onChange={props.handleChange} id={props.reservation._id}\r\n                       name={\"isEditorHere\"}/>\r\n            </td>\r\n\r\n            <td><input type={\"checkbox\"} checked={props.reservation.reportSent}\r\n                       onChange={props.handleChange} id={props.reservation._id}\r\n                       name={\"reportSent\"}/>\r\n            </td>\r\n\r\n            <td>{sumTable}</td>\r\n            <td>{sumSquareMeters}</td>\r\n            <td>{props.reservation.price} €</td>\r\n            <td><Button variant={\"warning\"}\r\n                onClick={props.handleDelete} name={props.reservation._id}>🗑</Button></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Reservation\r\n","import Reservation from \"./Reservation\";\r\nconst apiUrl = require(\"../../public/urlApi\")\r\n\r\nexport function getReservationsFromDB() {\r\n    return fetch(apiUrl.Reservations)\r\n        .then(r => r.json())\r\n        .then((response) => {\r\n            return response\r\n        })\r\n        .catch(e => {\r\n            console.log(e.stack)\r\n            console.log(e.message)\r\n        })\r\n}\r\n\r\nexport function getReservationFromDB(reservationId) {\r\n    return fetch(apiUrl.Reservations + \"/\" + reservationId)\r\n        .then(r => r.json())\r\n        .then((response) => {\r\n            return response\r\n        })\r\n        .catch(e => {\r\n            console.log(e.stack)\r\n            console.log(e.message)\r\n        })\r\n}\r\n\r\nfunction createReservation(response) {\r\n    return (\r\n        <Reservation\r\n            key={response.reservation._id}\r\n            exhibitor={response.exhibitor}\r\n            reservation={response.reservation}\r\n            deleteReservation={deleteReservation}\r\n            handleChange={updateReservationCheck}\r\n            handleDelete={deleteReservation}\r\n        />\r\n    )\r\n}\r\n\r\nexport function filterReservationByName(reservations, filterText) {\r\n    let rows = []\r\n    if(reservations) {\r\n        reservations.map(reservation => {\r\n            if(reservation.exhibitor) {\r\n                if (reservation && (reservation.exhibitor.name.toLowerCase().includes(filterText))) {\r\n                    rows.push(reservation)\r\n                }\r\n            }\r\n        })\r\n        return rows\r\n    }\r\n}\r\n\r\nexport function filterReservationByState(reservations, filterText) {\r\n    let rows = []\r\n    if(reservations) {\r\n        reservations.map(reservation => {\r\n            if(reservation.exhibitor) {\r\n                if (reservation && (reservation.reservation.state.toLowerCase().includes(filterText))) {\r\n                    rows.push(reservation)\r\n                }\r\n            }\r\n        })\r\n        return rows\r\n    }\r\n}\r\n\r\nexport function filterEditorByVolunteer(reservations) {\r\n    let rows = []\r\n    if(reservations) {\r\n        reservations.map(reservation => {\r\n            if(reservation.reservation) {\r\n                if (reservation && (reservation.reservation.need_volunteer)) {\r\n                    rows.push(reservation)\r\n                }\r\n            }\r\n        })\r\n        return rows\r\n    }\r\n}\r\n\r\nexport function filterEditorByEditorPresent(reservations) {\r\n    let rows = []\r\n    if(reservations) {\r\n        reservations.map(reservation => {\r\n            if(reservation.reservation) {\r\n                if (reservation && (reservation.reservation.isEditorHere)) {\r\n                    rows.push(reservation)\r\n                }\r\n            }\r\n        })\r\n        return rows\r\n    }\r\n}\r\n\r\nexport function filterEditorByReportSent(reservations) {\r\n    let rows = []\r\n    if(reservations) {\r\n        reservations.map(reservation => {\r\n            if(reservation.reservation) {\r\n                if (reservation && (reservation.reservation.reportSent)) {\r\n                    rows.push(reservation)\r\n                }\r\n            }\r\n        })\r\n        return rows\r\n    }\r\n}\r\n\r\nexport function mapCreateReservation(reservations) {\r\n    return reservations.map(reservation => createReservation(reservation))\r\n}\r\n\r\nexport let _addHandler\r\nexport function setAddHandler(handler) {\r\n    _addHandler = handler\r\n}\r\n\r\nexport function addReservation(reservation) {\r\n    const param = {\r\n        headers: {'Content-Type': 'application/json'},\r\n        method: \"POST\",\r\n        body: JSON.stringify(reservation)\r\n    }\r\n    return fetch(apiUrl.Reservations, param)\r\n}\r\n\r\nlet _handleDelete\r\nexport function setHandleDelete(handler) {\r\n    _handleDelete = handler\r\n}\r\n\r\nexport function deleteReservation(event) {\r\n    const reservationId = event.target.name\r\n\r\n    fetch(apiUrl.Reservations + \"/\" + reservationId, { method: 'DELETE' })\r\n        .then(() => _handleDelete(reservationId))\r\n}\r\n\r\nlet _handleUpdateCheck\r\nexport function setUpdateHandlerCheck(handler) {\r\n    _handleUpdateCheck = handler\r\n}\r\n\r\nfunction updateReservationCheck(event) {\r\n    const reservationId = event.target.id\r\n    const checked = event.target.checked\r\n    const name = event.target.name\r\n\r\n    const body = {[name]: checked}\r\n    const param = {\r\n        headers: {'Content-Type': 'application/json'},\r\n        method: \"POST\",\r\n        body: JSON.stringify(body)\r\n    }\r\n    return fetch(apiUrl.Reservations + \"/\" + reservationId, param)\r\n        .then(() => _handleUpdateCheck(reservationId, name, checked))\r\n}\r\n\r\nexport function updateReservation(state) {\r\n    const reservationId = state._id\r\n    const param = {\r\n        headers: {'Content-Type': 'application/json'},\r\n        method: \"POST\",\r\n        body: JSON.stringify(state)\r\n    }\r\n    return fetch(apiUrl.Reservations + \"/\" + reservationId, param)\r\n}\r\n","import {Component} from \"react\";\r\nimport {Button, Nav} from \"react-bootstrap\"\r\n\r\nclass Exhibitor extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.handleAddReservation = this.handleAddReservation.bind(this)\r\n    }\r\n\r\n    handleAddReservation(event) {\r\n        this.props.addReservation({\r\n            exhibitor: {\r\n                _id: event.target.name.split(\",\")[0],\r\n                name: event.target.name.split(\",\")[1]\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <tr id={this.props._id}>\r\n                <td><Nav.Link href={\"/nav/editeur/\" + this.props._id}>{this.props.name}</Nav.Link></td>\r\n                <td>{this.props.contacts[0]}</td>\r\n                <td><Button variant={\"primary\"} onClick={this.handleAddReservation}\r\n                            name={this.props._id + \",\" + this.props.name}>Créer une réservation</Button></td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Exhibitor\r\n","import Exhibitor from \"./Exhibitor\";\r\nconst apiUrl = require(\"../../../public/urlApi\")\r\nconst ReservationHandler = require(\"../../reservations/ReservationHandler\")\r\n\r\nexport function getExhibitorsFromDB() {\r\n    return fetch(apiUrl.Exhibitors)\r\n        .then(r => r.json())\r\n        .then(response => {\r\n            return response.exhibitors\r\n        })\r\n        .catch(e => {\r\n            console.log(e.stack)\r\n            console.log(e.message)\r\n        })\r\n}\r\n\r\nfunction createExhibitor(exhibitor) {\r\n    return (\r\n        <Exhibitor\r\n            key={exhibitor._id}\r\n            _id={exhibitor._id}\r\n            name={exhibitor.name}\r\n            contacts={exhibitor.contacts}\r\n            addReservation={ReservationHandler._addHandler}\r\n        />\r\n    )\r\n}\r\n\r\nexport function filterEditorByName(exhibitors, filterText) {\r\n    let rows = []\r\n    if(exhibitors) {\r\n        exhibitors.map(exhibitor => {\r\n            if (exhibitor && (exhibitor.name.toLowerCase().includes(filterText))) {\r\n                rows.push(createExhibitor(exhibitor))\r\n            }\r\n        })\r\n        return rows\r\n    }\r\n}\r\n\r\nexport function filterEditorByPotentialOnly(exhibitors) {\r\n    let rows = []\r\n    if(exhibitors) {\r\n        exhibitors.map(exhibitor => {\r\n            if (exhibitor && (exhibitor.isPotential)) {\r\n                rows.push(createExhibitor(exhibitor))\r\n            }\r\n        })\r\n        return rows\r\n    }\r\n}\r\n\r\nlet _handleUpdate\r\nexport function setHandleUpdate(handler) {\r\n    _handleUpdate = handler\r\n}\r\n","import {Nav} from \"react-bootstrap\"\r\n\r\nfunction Zone(props) {\r\n    return (\r\n        <tr id={props.zone._id}>\r\n            <td><Nav.Link href={\"/nav/zone/\" + props.zone._id}>{props.zone.label}</Nav.Link></td>\r\n            <td>{props.zone.sm_capacity}</td>\r\n            <td><input type={\"button\"} onClick={props.deleteZone} name={props.zone._id} value={\"🗑\"}/></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Zone\r\n","import Zone from \"./Zone\";\r\nconst apiUrl = require(\"../../public/urlApi\")\r\n\r\nexport function getZonesFromDB() {\r\n    return fetch(apiUrl.Festivals + \"/zones\")\r\n        .then(r => r.json())\r\n        .then((response) => {\r\n            return response\r\n        })\r\n        .catch(e => {\r\n            console.log(e.stack)\r\n            console.log(e.message)\r\n        })\r\n}\r\n\r\nexport function getZoneFromDB(zoneId) {\r\n    return fetch(apiUrl.Zones + \"/\" + zoneId)\r\n        .then(r => r.json())\r\n        .then((response) => {\r\n            return response\r\n        })\r\n        .catch(e => {\r\n            console.log(e.stack)\r\n            console.log(e.message)\r\n        })\r\n}\r\n\r\nexport function createZone(zone) {\r\n    return (\r\n        <Zone\r\n            key={zone._id}\r\n            zone={zone}\r\n            editor={zone.editor}\r\n            deleteZone={deleteZone}\r\n        />\r\n    )\r\n}\r\n\r\nexport function filterZonesByName(zones, filterText) {\r\n    let rows = []\r\n    if(zones) {\r\n        zones.map(zone => {\r\n            if (zone && (zone.label.toLowerCase().includes(filterText))) {\r\n                rows.push(createZone(zone))\r\n            }\r\n        })\r\n        return rows\r\n    }\r\n}\r\n\r\nexport function addZones(zone) {\r\n    const param = {\r\n        headers: {'Content-Type': 'application/json'},\r\n        method: \"POST\",\r\n        body: JSON.stringify(zone)\r\n    }\r\n    return fetch(apiUrl.Zones, param)\r\n}\r\n\r\nlet _handleDelete\r\nexport function setHandleDelete(handler) {\r\n    _handleDelete = handler\r\n}\r\n\r\nexport function deleteZone(event) {\r\n    const zoneId = event.target.name\r\n\r\n    return fetch(apiUrl.Zones + \"/\" + zoneId, { method: 'DELETE' })\r\n        .then(() => _handleDelete(zoneId))\r\n}\r\n\r\nexport function updateZone(zone) {\r\n    console.log(\"zone\", zone)\r\n    const param = {\r\n        headers: {'Content-Type': 'application/json'},\r\n        method: \"PUT\",\r\n        body: JSON.stringify(zone)\r\n    }\r\n\r\n    return fetch(apiUrl.Zones + \"/\" + zone._id, param)\r\n}\r\n","import Festival from \"./Festival\";\r\nimport {Card, Row} from \"react-bootstrap\";\r\nconst apiUrl = require(\"../../public/urlApi\")\r\n\r\nexport function getFestivalsFromDB() {\r\n    return fetch(apiUrl.Festivals)\r\n        .then(r => r.json())\r\n        .then((response) => {\r\n            return response\r\n        })\r\n        .catch(e => {\r\n            console.log(e.stack)\r\n            console.log(e.message)\r\n        })\r\n}\r\n\r\n\r\nfunction createFestival(festival) {\r\n    let color\r\n    if(festival.f.is_current) {color = \"success\"}\r\n    else {color = \"secondary\"}\r\n\r\n    return (\r\n        <Row style={{margin: '1em'}} key={festival._id}>\r\n        <Card bg={color}>\r\n            <Festival\r\n                festival={festival}\r\n                deleteFestival={deleteFestival}\r\n                handleUpdate={updateFestival}\r\n                handleUpdateCurrent={updateCurrent}\r\n            />\r\n        </Card>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport function filterFestivalByName(festivals, filterText) {\r\n    let rows = []\r\n    if(festivals) {\r\n        festivals.map(festival => {\r\n            if (festival && (festival.f.name.toLowerCase().includes(filterText))) {\r\n                rows.push(createFestival(festival))\r\n            }\r\n        })\r\n        return rows\r\n    }\r\n}\r\n\r\nexport function filterFestivalByYear(festivals, filterText) {\r\n    let rows = []\r\n    if(festivals) {\r\n        festivals.map(festival => {\r\n            if (festival && (festival.f.year.toString().includes(filterText))) {\r\n                rows.push(createFestival(festival))\r\n            }\r\n        })\r\n        return rows\r\n    }\r\n}\r\n\r\nexport function addFestival(festival) {\r\n    const param = {\r\n        headers: {'Content-Type': 'application/json'},\r\n        method: \"POST\",\r\n        body: JSON.stringify(festival)\r\n    }\r\n    return fetch(apiUrl.Festivals, param)\r\n}\r\n\r\nlet _handleDelete\r\nexport function setHandleDelete(handler) {\r\n    _handleDelete = handler\r\n}\r\n\r\nexport function deleteFestival(event) {\r\n    const festivalId = event.target.name\r\n\r\n    fetch(apiUrl.Festivals + \"/\" + festivalId, { method: 'DELETE' })\r\n        .then(() => _handleDelete(festivalId))\r\n}\r\n\r\nlet _handleUpdate\r\nexport function setHandleUpdate(handler) {\r\n    _handleUpdate = handler\r\n}\r\n\r\nexport function updateFestival(festival) {\r\n    const param = {\r\n        headers: {'Content-Type': 'application/json'},\r\n        method: \"PUT\",\r\n        body: JSON.stringify(festival)\r\n    }\r\n\r\n    fetch(apiUrl.Festivals + \"/\" + festival._id, param)\r\n        .then()\r\n}\r\n\r\nexport function updateCurrent(festival) {\r\n    const param = {\r\n        headers: {'Content-Type': 'application/json'},\r\n        method: \"PUT\",\r\n        body: JSON.stringify(festival)\r\n    }\r\n    fetch(apiUrl.Festivals + \"/\" + festival._id + \"/current\", param)\r\n        .then(() => _handleUpdate(festival._id, festival.is_current))\r\n}\r\n","import {Component} from \"react\"\r\nimport {Card, FormControl, Table} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass Festival extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            _id: props.festival.f._id,\r\n            nb_t_premium: props.festival.f.nb_t_premium,\r\n            nb_t_standard: props.festival.f.nb_t_standard,\r\n            nb_t_low: props.festival.f.nb_t_low,\r\n            nb_sm_premium: props.festival.f.nb_sm_premium,\r\n            nb_sm_standard: props.festival.f.nb_sm_standard,\r\n            nb_sm_low: props.festival.f.nb_sm_low,\r\n            premium_t_price: props.festival.f.premium_t_price,\r\n            standard_t_price: props.festival.f.standard_t_price,\r\n            low_t_price: props.festival.f.low_t_price,\r\n            premium_sm_price: props.festival.f.premium_sm_price,\r\n            standard_sm_price: props.festival.f.standard_sm_price,\r\n            low_sm_price: props.festival.f.low_sm_price,\r\n            is_current: props.festival.f.is_current,\r\n            nb_rt_premium: props.festival.nb_rt_premium,\r\n            nb_rt_standard: props.festival.nb_rt_standard,\r\n            nb_rt_low: props.festival.nb_rt_low,\r\n            nb_rsm_premium: props.festival.nb_rsm_premium,\r\n            nb_rsm_standard: props.festival.nb_rsm_standard,\r\n            nb_rsm_low: props.festival.nb_rsm_low,\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.submit = this.submit.bind(this)\r\n        this.setCurrent = this.setCurrent.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target\r\n        const name = target.name\r\n        const value = target.value\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    submit() {\r\n        this.props.handleUpdate(this.state)\r\n    }\r\n\r\n    setCurrent() {\r\n        this.props.handleUpdateCurrent({\r\n            _id: this.state._id,\r\n            is_current: true\r\n        })\r\n        this.setState({is_current: true})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Card.Body>\r\n                    <Card.Header>\r\n                        <Card.Title>{this.props.festival.f.name} - {this.props.festival.f.year}</Card.Title>\r\n                    </Card.Header>\r\n                    <Card.Text>\r\n                        <Table>\r\n                            <thead>\r\n                            <tr>\r\n                                <th/>\r\n                                <th>Tables</th>\r\n                                <th>prix/table</th>\r\n                                <th>restant</th>\r\n                                <th>m²</th>\r\n                                <th>prix/m²</th>\r\n                                <th>restant</th>\r\n                            </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n                            <tr>\r\n                                <td>Premium</td>\r\n                                <td>\r\n                                    <FormControl as={\"input\"} type={\"text\"} value={this.state.nb_t_premium}\r\n                                                 onChange={this.handleChange} name={\"nb_t_premium\"}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <FormControl as={\"input\"} type={\"text\"} value={this.state.premium_t_price}\r\n                                                 onChange={this.handleChange} name={\"premium_t_price\"}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <FormControl as={\"input\"} type={\"text\"}\r\n                                                 value={this.state.nb_rt_premium+\"/\"+this.state.nb_t_premium}\r\n                                                 readOnly/>\r\n                                </td>\r\n                                <td>\r\n                                    <FormControl as={\"input\"} type={\"text\"}\r\n                                                 value={this.state.nb_sm_premium}\r\n                                                 onChange={this.handleChange} name={\"nb_sm_premium\"}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <FormControl as={\"input\"} type={\"text\"}\r\n                                                 value={this.state.premium_sm_price}\r\n                                                 onChange={this.handleChange} name={\"premium_sm_price\"}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <FormControl as={\"input\"} type={\"text\"}\r\n                                                 value={this.state.nb_rsm_premium+\"/\"+this.state.nb_sm_premium}\r\n                                                 readOnly/>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>Standard</td>\r\n                                <td>\r\n                                    <FormControl as={\"input\"} type={\"text\"} value={this.state.nb_t_standard}\r\n                                                 onChange={this.handleChange} name={\"nb_t_standard\"}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <FormControl as={\"input\"} type={\"text\"} value={this.state.standard_t_price}\r\n                                                 onChange={this.handleChange} name={\"standard_t_price\"}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <FormControl as={\"input\"} type={\"text\"}\r\n                                                 value={this.state.nb_rt_standard+\"/\"+this.state.nb_t_standard}\r\n                                                 readOnly/>\r\n                                </td>\r\n                                <td>\r\n                                    <FormControl as={\"input\"} type={\"text\"} value={this.state.nb_sm_standard}\r\n                                                 onChange={this.handleChange} name={\"nb_sm_standard\"}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <FormControl as={\"input\"} type={\"text\"} value={this.state.standard_sm_price}\r\n                                                 onChange={this.handleChange} name={\"standard_sm_price\"}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <FormControl as={\"input\"} type={\"text\"}\r\n                                                 value={this.state.nb_rsm_standard+\"/\"+this.state.nb_sm_standard}\r\n                                                 readOnly/>\r\n                                </td>\r\n                            </tr>\r\n\r\n                            <tr>\r\n                                <td>Low</td>\r\n                                <td>\r\n                                    <FormControl as={\"input\"} type={\"text\"} value={this.state.nb_t_low}\r\n                                                 onChange={this.handleChange} name={\"nb_t_low\"}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <FormControl as={\"input\"} type={\"text\"} value={this.state.low_t_price}\r\n                                                 onChange={this.handleChange} name={\"low_t_price\"}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <FormControl as={\"input\"} type={\"text\"}\r\n                                                 value={this.state.nb_rt_low+\"/\"+this.state.nb_t_low}\r\n                                                 readOnly/>\r\n                                </td>\r\n                                <td>\r\n                                    <FormControl as={\"input\"} type={\"text\"} value={this.state.nb_sm_low}\r\n                                                 onChange={this.handleChange} name={\"nb_sm_low\"}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <FormControl as={\"input\"} type={\"text\"} value={this.state.low_sm_price}\r\n                                                 onChange={this.handleChange} name={\"low_sm_price\"}\r\n                                    />\r\n                                </td>\r\n                                <td>\r\n                                    <FormControl as={\"input\"} type={\"text\"}\r\n                                                 value={this.state.nb_rsm_low+\"/\"+this.state.nb_sm_low}\r\n                                                 readOnly/>\r\n                                </td>\r\n                            </tr>\r\n                            </tbody>\r\n                        </Table>\r\n                    </Card.Text>\r\n                    <Button variant=\"primary\" type={\"button\"} onClick={this.submit}>Sauvegarder</Button>\r\n                    <Button variant=\"primary\" type={\"button\"}\r\n                            onClick={this.setCurrent}\r\n                    >Set courant</Button>\r\n                    <Button\r\n                        variant={\"warning\"} type={\"button\"}\r\n                        onClick={this.props.deleteFestival} name={this.props.festival.f._id}>🗑</Button>\r\n                </Card.Body>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Festival\r\n","function Bill(props) {\r\n    return (\r\n        <tr id={props._id}>\r\n            <td>{props.name}</td>\r\n            <td>{props.contact}</td>\r\n            <td><input type={\"button\"} onClick={props.deleteBill} name={props._id} value={\"🗑\"}/></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default Bill\r\n","import Bill from \"./Bill\";\r\nconst apiUrl = require(\"../../public/urlApi\")\r\n\r\nexport function getBillsFromDB() {\r\n    return fetch(apiUrl.Bills)\r\n        .then(r => r.json())\r\n        .then((response) => {\r\n            return response.bills\r\n        })\r\n        .catch(e => {\r\n            console.log(e.stack)\r\n            console.log(e.message)\r\n        })\r\n}\r\n\r\n\r\nfunction createBill(bill) {\r\n    return (\r\n        <Bill\r\n            key={bill._id}\r\n            _id={bill._id}\r\n            name={bill.name}\r\n            deleteBill={deleteBill}\r\n        />\r\n    )\r\n}\r\n\r\nexport function filterBillByName(bills, filterText) {\r\n    let rows = []\r\n    if(bills) {\r\n        bills.map(bill => {\r\n            if (bill && (bill.name.toLowerCase().includes(filterText))) {\r\n                rows.push(createBill(bill))\r\n            }\r\n        })\r\n        return rows\r\n    }\r\n}\r\n\r\nexport function addBill(bill) {\r\n    const param = {\r\n        headers: {'Content-Type': 'application/json'},\r\n        method: \"POST\",\r\n        body: JSON.stringify(bill)\r\n    }\r\n    return fetch(apiUrl.Bills, param)\r\n}\r\n\r\nlet _handleDelete\r\nexport function setHandleDelete(handler) {\r\n    _handleDelete = handler\r\n}\r\n\r\nexport function deleteBill(event) {\r\n    const billId = event.target.name\r\n\r\n    fetch(apiUrl.Bills + \"/\" + billId, { method: 'DELETE' })\r\n        .then(() => _handleDelete(billId))\r\n}\r\n","import {Component} from \"react\"\r\nimport {Form, FormControl, Button, FormLabel} from \"react-bootstrap\";\r\nimport {Redirect} from \"react-router-dom\";\r\nconst urlApi = require('../../public/urlApi')\r\n\r\nclass FormSignIn extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            email: \"\",\r\n            pwd: \"\",\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    formIsUnchanged() {\r\n        return (\r\n            this.state.email === \"\" ||\r\n            this.state.pwd === \"\"\r\n        )\r\n    }\r\n\r\n    handleSubmit() {\r\n        if (this.formIsUnchanged()) {\r\n            return\r\n        }\r\n        const params = {\r\n            headers: {'Content-Type': 'application/json'},\r\n            method: \"POST\",\r\n            body: JSON.stringify(this.state)\r\n        }\r\n        fetch(urlApi.login, params)\r\n            .then(res => res.json())\r\n            .then((res) => {\r\n                let d = new Date()\r\n                d.setTime(d.getTime() + (24 * 60 * 60 * 1000))\r\n                document.cookie = \"bearer\" + \" \" + res.token + \";\" + \"expires\" + \"=\" + d.toUTCString()// + \";\" + \"Secure; HttpOnly\"\r\n            })\r\n            .catch(e => {\r\n                console.log(e.stack)\r\n                console.log(e.message)\r\n            })\r\n            .then(() => this.setState({redirect: \"/nav/festivals\"}))\r\n        this.setState({\r\n            email: \"\",\r\n            pwd: \"\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return <Redirect to={this.state.redirect}/>\r\n        }\r\n        return (\r\n            <Form style={{margin: '1em'}}>\r\n                <FormLabel>Email</FormLabel>\r\n                <FormControl\r\n                    type={\"text\"}\r\n                    value={this.state.email}\r\n                    name={\"email\"}\r\n                    placeholder={\"prenom.nom@jeux.com\"}\r\n                    onChange={this.handleChange}\r\n                />\r\n\r\n                <FormLabel>Mot de passe</FormLabel>\r\n                <FormControl\r\n                    type={\"password\"}\r\n                    value={this.state.pwd}\r\n                    name={\"pwd\"}\r\n                    placeholder={\"Mot de passe\"}\r\n                    onChange={this.handleChange}\r\n                />\r\n                <Button onClick={this.handleSubmit}> Connexion</Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FormSignIn\r\n","import {Form, FormControl} from \"react-bootstrap\";\r\nimport {Component} from \"react\"\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleFilterTextChange = this.handleFilterTextChange.bind(this)\r\n    }\r\n\r\n    handleFilterTextChange(e) {\r\n        this.props.onFilterTextChange(e.target.value)\r\n    }\r\n\r\n    render() {\r\n        const textField = \"Recherche par \" + this.props.filter.french + \"...\"\r\n\r\n        return (\r\n            <Form>\r\n                <FormControl\r\n                    type=\"text\"\r\n                    placeholder={textField}\r\n                    value={this.props.filterText}\r\n                    onChange={this.handleFilterTextChange}\r\n                />\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBar\r\n","import {Component} from \"react\"\r\nimport {Form, FormControl} from \"react-bootstrap\";\r\n\r\nclass Filter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleFilterChange = this.handleFilterChange.bind(this)\r\n    }\r\n\r\n    listFilter = this.props.filters.map(filter =>\r\n        <option key={filter.english} value={filter.english + \",\" + filter.french}>{filter.french}</option>\r\n    )\r\n\r\n    handleFilterChange(e) {\r\n        this.props.onFilterChange(e.target.value.split(\",\")[0], e.target.value.split(',')[1])\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form>\r\n                <FormControl as={\"select\"} onChange={this.handleFilterChange}>\r\n                    {this.listFilter}\r\n                </FormControl>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Filter\r\n","import {Component} from \"react\"\r\n\r\nconst FestivalHandler = require(\"./FestivalHandler\")\r\n\r\nclass FestivalTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.rows = []\r\n        this.state = {\r\n            rows: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let rows\r\n        if(this.props.filter === \"name\") {\r\n            rows = FestivalHandler.filterFestivalByName(this.props.festivals, this.props.filterText.toLowerCase())\r\n        }\r\n        else if (this.props.filter === \"year\") {\r\n            rows = FestivalHandler.filterFestivalByYear(this.props.festivals, this.props.filterText)\r\n        }\r\n        return (\r\n            <>\r\n                {rows}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FestivalTable\r\n","export default __webpack_public_path__ + \"static/media/addFiles.05f97dea.svg\";","import {Component} from \"react\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport {Form, FormControl, FormGroup} from \"react-bootstrap\";\r\n\r\nclass EditorForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            contacts: [],\r\n            isEditor: false,\r\n            isExhibitor: false,\r\n            isPotential: true\r\n        }\r\n\r\n        this.submit = this.submit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleContactsChange = this.handleContactsChange.bind(this)\r\n        this.addContact = this.addContact.bind(this)\r\n        this.removeContacts = this.removeContacts.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleContactsChange(event) {\r\n        const target = event.target\r\n        const value = target.value\r\n        const index = target.name;\r\n\r\n        let contacts = this.state.contacts\r\n        contacts[index] = value\r\n\r\n        this.setState({contacts: contacts})\r\n    }\r\n\r\n    addContact() {\r\n        this.state.contacts.push(\"\")\r\n        this.setState({contacts: this.state.contacts})\r\n    }\r\n\r\n    removeContacts() {\r\n        this.state.contacts.pop()\r\n        this.setState({contacts: this.state.contacts})\r\n    }\r\n\r\n    formIsUnchanged() {\r\n        return (\r\n            this.state.name === \"\" ||\r\n            this.state.contacts === \"\"\r\n        )\r\n    }\r\n\r\n    submit() {\r\n        if (this.formIsUnchanged()) {\r\n            return\r\n        }\r\n        this.props.handleClick(this.state)\r\n        this.setState({\r\n            name: \"\",\r\n            contact: \"\",\r\n            isEditor: \"\",\r\n            isExhibitor: \"\",\r\n            isPotential: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.contacts.map((contact, index) => {\r\n            return (\r\n                <>\r\n                    <FormControl\r\n                        as={\"input\"} type={\"text\"} value={contact} key={index}\r\n                        onChange={this.handleContactsChange} name={index}/>\r\n                </>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <Form>\r\n                <FormGroup>\r\n                    <Form.Label>Nom</Form.Label>\r\n                    <FormControl as={\"input\"} name=\"name\" type=\"text\" value={this.state.name} placeholder=\"Nom\"\r\n                           onChange={this.handleChange}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Form.Label>Contacts</Form.Label>\r\n                    <Button variant={\"warning\"} onClick={this.addContact}>Ajouter contact</Button>\r\n                    <Button variant={\"warning\"} onClick={this.removeContacts}>Enlever contact</Button>\r\n                    {rows}\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Form.Check label={\"Editeur ?\"}\r\n                                checked={this.state.isEditor}\r\n                                onChange={this.handleChange}\r\n                                name=\"isEditor\"\r\n                    />\r\n                    <Form.Check label={\"Exposant ?\"}\r\n                                checked={this.state.isExhibitor}\r\n                                onChange={this.handleChange}\r\n                                name=\"isExhibitor\"\r\n                    />\r\n                </FormGroup>\r\n\r\n                <Button onClick={this.submit} variant={\"link\"}>Ajouter</Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditorForm\r\n","import {Component} from \"react\"\r\nimport {Form, FormControl, Button, FormGroup} from \"react-bootstrap\";\r\n\r\nconst EditorHandler = require(\"../editor/EditorHandler\")\r\n\r\nclass GameForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        let editorId = \"\", editorName = \"\"\r\n        if(props.editorId) {\r\n            editorId = props.editorId\r\n            editorName = props.editorName\r\n        }\r\n\r\n        let zoneId = \"\"\r\n        if(props.zone) {zoneId = props.zone}\r\n        this.state = {\r\n            editors: [],\r\n            name: \"\",\r\n            min_yearold: \"\",\r\n            category: \"\",\r\n            duration: \"\",\r\n            editor: {_id: editorId, name: editorName},\r\n            zone: zoneId,\r\n            countPlayer: \"\",\r\n            prototype: \"\",\r\n            placed: \"\",\r\n            recieved: \"\",\r\n            need_volunteer: \"\",\r\n            date: \"\"\r\n        }\r\n\r\n        this.submit = this.submit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleEditorChange = this.handleEditorChange.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        if(!this.props.editorId){\r\n            EditorHandler.getEditorsFromDB()\r\n                .then(editors => editors.filter(editor => {\r\n                    return editor.isEditor && editor.isPotential\r\n                }))\r\n                .then(editors => this.setState({\r\n                    editors: editors\r\n                }))\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleEditorChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n\r\n        this.state.editor = {\r\n            _id: value.split(',')[0],\r\n            name: value.split(',')[1]\r\n        }\r\n        this.setState({\r\n            editor: this.state.editor\r\n        })\r\n    }\r\n\r\n    formIsUnchanged() {\r\n        return (\r\n            this.state.name === \"\" ||\r\n            this.state.min_yearold === \"\" ||\r\n            this.state.category === \"\" ||\r\n            this.state.duration === \"\" ||\r\n            this.state.editor._id === \"\" ||\r\n            this.state.editor.name === \"\"\r\n        )\r\n    }\r\n\r\n    submit() {\r\n        if (this.formIsUnchanged()) {\r\n            return\r\n        }\r\n        const editors = this.state.editors\r\n        this.state.editors = undefined\r\n        this.props.handleClick(this.state)\r\n        this.setState({\r\n            editors: editors,\r\n            name: \"\",\r\n            min_yearold: \"\",\r\n            category: \"\",\r\n            duration: \"\",\r\n            editor: {_id: \"\", name: \"\"},\r\n            zone: \"\",\r\n            countPlayer: \"\",\r\n            prototype: \"\",\r\n            recieved: \"\",\r\n            need_volunteer: \"\",\r\n            date: \"\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let rows, firstRow\r\n        if(this.props.editorId !== undefined) {\r\n            rows = <option key={this.props.editorId} value={this.props.editorId + \",\" + this.props.editorName}>\r\n                {this.props.editorName}</option>\r\n        } else {\r\n            firstRow = <option value={\"\"}>---</option>\r\n            rows = this.state.editors.map(editor =>\r\n                <option key={editor._id} value={editor._id + \",\" + editor.name}>{editor.name}</option>\r\n            )\r\n        }\r\n        const optionsCategory = [\r\n            \"Famille\",\r\n            \"Ambiance\",\r\n            \"Expert\",\r\n            \"Enfant\",\r\n            \"Classiqe\",\r\n            \"Famille+\"\r\n        ]\r\n\r\n        const category = optionsCategory.map(cat =>\r\n            <option value={cat.toUpperCase()}>{cat}</option>\r\n        )\r\n        return (\r\n            <Form>\r\n                <FormGroup>\r\n                    <Form.Label>Editeur</Form.Label>\r\n                    <FormControl as={\"select\"} onChange={this.handleEditorChange}>\r\n                        {firstRow}\r\n                        {rows}\r\n                    </FormControl>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Form.Label>Nom</Form.Label>\r\n                    <FormControl as={\"input\"} name=\"name\" type=\"text\" value={this.state.name} placeholder=\"Nom du jeu\"\r\n                                 onChange={this.handleChange}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Form.Label>Âge requis</Form.Label>\r\n                    <FormControl as={\"input\"} name=\"min_yearold\" type=\"number\" value={this.state.min_yearold} placeholder=\"Âge minimum\"\r\n                                 onChange={this.handleChange} min={0}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Form.Label>Catégorie</Form.Label>\r\n                    <FormControl as={\"select\"} name=\"category\" onChange={this.handleChange}>\r\n                        <option value=\"\">---</option>\r\n                        {category}\r\n                    </FormControl>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Form.Label>Durée de partie</Form.Label>\r\n                    <FormControl as={\"input\"} name=\"duration\" type=\"number\" value={this.state.duration} placeholder=\"Durée\"\r\n                                 onChange={this.handleChange} min={0}/>\r\n                </FormGroup>\r\n\r\n                <Button onClick={this.submit} variant={\"link\"}>Ajouter à l'éditeur</Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameForm\r\n","import {Component} from \"react\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport {Form, FormControl, FormGroup} from \"react-bootstrap\";\r\n\r\nclass FestivalForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: \"\",\r\n            year: \"\",\r\n            nb_t_premium: \"\",\r\n            nb_t_standard: \"\",\r\n            nb_t_low: \"\",\r\n            nb_sm_premium: \"\",\r\n            nb_sm_standard: \"\",\r\n            nb_sm_low: \"\",\r\n            premium_t_price: \"\",\r\n            standard_t_price: \"\",\r\n            low_t_price: \"\",\r\n            premium_sm_price: \"\",\r\n            standard_sm_price: \"\",\r\n            low_sm_price: \"\",\r\n            is_current: false\r\n        }\r\n\r\n        this.submit = this.submit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    formIsUnchanged() {\r\n        return (\r\n            this.state.name === \"\" ||\r\n            this.state.nb_t_premium ===  \"\" ||\r\n            this.state.nb_t_standard === \"\" ||\r\n            this.state.nb_t_low === \"\" ||\r\n            this.state.nb_sm_premium === \"\" ||\r\n            this.state.nb_sm_standard === \"\" ||\r\n            this.state.nb_sm_low === \"\" ||\r\n            this.state.year === \"\" ||\r\n            this.state.premium_t_price === \"\" ||\r\n            this.state.standard_t_price === \"\" ||\r\n            this.state.low_t_price === \"\" ||\r\n            this.state.premium_sm_price === \"\" ||\r\n            this.state.standard_sm_price === \"\" ||\r\n            this.state.low_sm_price === \"\"\r\n        )\r\n    }\r\n\r\n    submit() {\r\n        if (this.formIsUnchanged()) {\r\n            return\r\n        }\r\n        this.props.handleClick(this.state)\r\n        this.setState({\r\n            name: \"\",\r\n            year: \"\",\r\n            nb_t_premium: \"\",\r\n            nb_t_standard: \"\",\r\n            nb_t_low: \"\",\r\n            nb_sm_premium: \"\",\r\n            nb_sm_standard: \"\",\r\n            nb_sm_low: \"\",\r\n            premium_t_price: \"\",\r\n            standard_t_price: \"\",\r\n            low_t_price: \"\",\r\n            premium_sm_price: \"\",\r\n            standard_sm_price: \"\",\r\n            low_sm_price: \"\",\r\n            isCurrent: \"\",\r\n            nb_rt_premium: 0,\r\n            nb_rt_standard: 0,\r\n            nb_rt_low: 0,\r\n            nb_rsm_premium: 0,\r\n            nb_rsm_standard: 0,\r\n            nb_rsm_low: 0\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form>\r\n                <FormGroup>\r\n                    <Form.Label>Nom du festival</Form.Label>\r\n                    <FormControl as={\"input\"} name=\"name\" type=\"text\" value={this.state.name} placeholder=\"Nom\"\r\n                           onChange={this.handleChange}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Form.Label>Année du festival</Form.Label>\r\n                    <FormControl as={\"input\"} name=\"year\" type=\"number\" min={0} value={this.state.year} placeholder=\"Année\"\r\n                                 onChange={this.handleChange}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Form.Label>Nombre de tables</Form.Label>\r\n                    <FormControl as={\"input\"} name=\"nb_t_premium\" type=\"number\" min={0} value={this.state.nb_t_premium}\r\n                                 placeholder=\"premium\" onChange={this.handleChange}/>\r\n\r\n                    <FormControl as={\"input\"} name=\"nb_t_standard\" type=\"number\" min={0} value={this.state.nb_t_standard}\r\n                                 placeholder=\"standard\" onChange={this.handleChange}/>\r\n\r\n                    <FormControl as={\"input\"} name=\"nb_t_low\" type=\"number\" min={0} value={this.state.nb_t_low}\r\n                                 placeholder=\"low\" onChange={this.handleChange}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Form.Label>Nombre de m²</Form.Label>\r\n                    <FormControl as={\"input\"} name=\"nb_sm_premium\" type=\"number\" min={0} value={this.state.nb_sm_premium}\r\n                                 placeholder=\"premium\" onChange={this.handleChange}/>\r\n\r\n                    <FormControl as={\"input\"} name=\"nb_sm_standard\" type=\"number\" min={0} value={this.state.nb_sm_standard}\r\n                                 placeholder=\"standard\" onChange={this.handleChange}/>\r\n\r\n                    <FormControl as={\"input\"} name=\"nb_sm_low\" type=\"number\" min={0} value={this.state.nb_sm_low}\r\n                                 placeholder=\"low\" onChange={this.handleChange}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Form.Label>prix des tables</Form.Label>\r\n                    <FormControl as={\"input\"} name=\"premium_t_price\" type=\"number\" min={0} value={this.state.premium_t_price}\r\n                                 placeholder=\"premium\" onChange={this.handleChange}/>\r\n\r\n                    <FormControl as={\"input\"} name=\"standard_t_price\" type=\"number\" min={0} value={this.state.standard_t_price}\r\n                                 placeholder=\"standard\" onChange={this.handleChange}/>\r\n\r\n                    <FormControl as={\"input\"} name=\"low_t_price\" type=\"number\" min={0} value={this.state.low_t_price}\r\n                                 placeholder=\"low\" onChange={this.handleChange}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Form.Label>prix des m²</Form.Label>\r\n                    <FormControl as={\"input\"} name=\"premium_sm_price\" type=\"number\" min={0} value={this.state.premium_sm_price}\r\n                                 placeholder=\"premium\" onChange={this.handleChange}/>\r\n\r\n                    <FormControl as={\"input\"} name=\"standard_sm_price\" type=\"number\" min={0} value={this.state.standard_sm_price}\r\n                                 placeholder=\"standard\" onChange={this.handleChange}/>\r\n\r\n                    <FormControl as={\"input\"} name=\"low_sm_price\" type=\"number\" min={0} value={this.state.low_sm_price}\r\n                                 placeholder=\"low\" onChange={this.handleChange}/>\r\n                </FormGroup>\r\n\r\n                <Button onClick={this.submit} variant={\"link\"}>Ajouter</Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FestivalForm\r\n","import {Component} from \"react\"\r\nimport Button from \"react-bootstrap/Button\"\r\nimport {Form, FormControl, FormGroup} from \"react-bootstrap\";\r\n\r\nconst ExhibitorHandler = require(\"../editor/exhibitor/ExhibitorHandler\")\r\n\r\nclass ReservationForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            exhibitor: {_id: \"\", name: \"\"}\r\n        }\r\n\r\n        this.submit = this.submit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleExhibitorChange = this.handleExhibitorChange.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        ExhibitorHandler.getExhibitorsFromDB()\r\n            .then(exhibitors => exhibitors.map(exhibitor => {\r\n            if (exhibitor && (exhibitor.isPotential)) {\r\n                this.state.exhibitors.push(exhibitor)\r\n            }\r\n            }))\r\n            .then(() => this.setState({\r\n                exhibitors: this.state.exhibitors\r\n            }))\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleExhibitorChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n\r\n        this.state.exhibitor = {\r\n            _id: value.split(',')[0],\r\n            name: value.split(',')[1]\r\n        }\r\n        this.setState({\r\n            exhibitor: this.state.exhibitor\r\n        })\r\n    }\r\n\r\n    formIsUnchanged() {\r\n        return (\r\n            this.state.exhibitor._id === \"\" ||\r\n            this.state.exhibitor.name === \"\"\r\n        )\r\n    }\r\n\r\n    submit() {\r\n        if (this.formIsUnchanged()) {\r\n            return\r\n        }\r\n        this.state.exhibitors = undefined\r\n        this.props.handleClick(this.state)\r\n    }\r\n\r\n    render() {\r\n        const rows = this.props.exhibitors.map(exhibitor =>\r\n            <option key={exhibitor._id} value={exhibitor._id + \",\" + exhibitor.name}>{exhibitor.name}</option>\r\n        )\r\n\r\n        return (\r\n            <Form>\r\n                <FormGroup>\r\n                    <Form.Label>Exposant</Form.Label>\r\n                    <FormControl as={\"select\"} name=\"exhibitor\" onChange={this.handleExhibitorChange}>\r\n                        <option value={\"\"}>---</option>\r\n                        {rows}\r\n                    </FormControl>\r\n                </FormGroup>\r\n\r\n                <Button onClick={this.submit} variant={\"link\"}>Ajouter</Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReservationForm\r\n","import {Component} from \"react\"\r\nimport {Form, FormControl, Button, FormGroup} from \"react-bootstrap\";\r\nimport GameForm from \"../../games/GameForm\";\r\n\r\nconst EditorHandler = require(\"../../editor/EditorHandler\")\r\nconst GameHandler = require('../../games/GamesHandler')\r\n\r\nclass GamesBookedForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            _id: props.reservationId,\r\n            editor: {\r\n                _id: \"\",\r\n                name: \"\",\r\n                games: []\r\n            },\r\n            game: \"\",\r\n            editors: []\r\n        }\r\n\r\n        this.submit = this.submit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleEditorChange = this.handleEditorChange.bind(this)\r\n        this.handleAddGames = this.handleAddGames.bind(this)\r\n        this.handleGameChange = this.handleGameChange.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        EditorHandler.getEditorsFromDB()\r\n            .then(editors => editors.filter(editor =>{\r\n                return editor.isEditor\r\n            }))\r\n            .then(editors => this.setState({\r\n                editors: editors\r\n            }))\r\n            .then(() =>\r\n                EditorHandler.getGamesFromEditor(this.state.editors[0]._id)\r\n                    .then(games => this.state.editors[0].games = games)\r\n                    .then(() => this.setState({editors: this.state.editors}))\r\n                    .then(() => this.setState({game: this.state.editors[0].games[0]}))\r\n                    .then(() => this.setState({editor: this.state.editors[0]}))\r\n            )\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleEditorChange(event) {\r\n        const target = event.target;\r\n        const value = target.value\r\n\r\n        const editor = this.state.editors.filter(editor => {\r\n            return editor._id === value\r\n        })\r\n\r\n        this.setState({\r\n                editor: editor[0]\r\n            }, () => {\r\n                EditorHandler.getGamesFromEditor(value)\r\n                    .then(games => editor[0].games = games)\r\n                    .then(() => this.setState({editor: editor[0]}))\r\n                    .then(() => this.state.game = editor[0].games[0])\r\n                    .then(() => this.setState({game: this.state.game}))\r\n            }\r\n        )\r\n    }\r\n\r\n    handleGameChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const game = this.state.editor.games.filter(game => {\r\n            return game._id === value.split(\",\")[0]\r\n        })\r\n        game[0].game = game[0]._id\r\n        this.setState({game: game[0]})\r\n    }\r\n\r\n    handleAddGames(game) {\r\n        GameHandler.addGames(game)\r\n            .then(response => response.json())\r\n            .then(response => game._id = response.gameId)\r\n            .then(() => this.state.editor.games.push(game))\r\n            .then(() => this.setState({editor: this.state.editor}))\r\n    }\r\n\r\n    submit() {\r\n        const editors = this.state.editors\r\n        this.state.editors = undefined\r\n        this.props.handleClick(this.state.game)\r\n        this.setState({\r\n            editors: editors\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const editorRows = this.state.editors.map(editor =>\r\n            <option key={editor._id} value={editor._id}>\r\n                {editor.name}</option>\r\n        )\r\n\r\n        const editorGamesDefined = this.state.editor.games? this.state.editor.games: []\r\n        const editorGames = editorGamesDefined.map(game =>\r\n            <option value={game._id + \",\" + game.name}>{game.name}</option>\r\n        )\r\n        let form\r\n        if(editorGamesDefined.length > 0) {\r\n            form = (\r\n                <FormGroup>\r\n                    <Form.Label>Jeux</Form.Label>\r\n                    <FormControl as={\"select\"} onChange={this.handleGameChange}>\r\n                        {editorGames}\r\n                    </FormControl>\r\n                </FormGroup>\r\n            )\r\n        } else {\r\n            form = (\r\n                <GameForm\r\n                    editorId={this.state.editor._id}\r\n                    editorName={this.state.editor.name}\r\n                    handleClick={this.handleAddGames}\r\n                />\r\n            )\r\n        }\r\n        return (\r\n            <Form>\r\n                <FormGroup>\r\n                    <Form.Label>Editeur</Form.Label>\r\n                    <FormControl\r\n                        as={\"select\"}\r\n                        onChange={this.handleEditorChange}\r\n                    >\r\n                        {editorRows}\r\n                    </FormControl>\r\n                </FormGroup>\r\n\r\n                {form}\r\n\r\n                <Button onClick={this.submit} variant={\"link\"}>Ajouter à la réservation</Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GamesBookedForm\r\n","import {Component} from \"react\"\r\nimport {Form, FormControl, Button, FormGroup} from \"react-bootstrap\";\r\n\r\nclass ZoneForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            label: \"\",\r\n            sm_capacity: \"\"\r\n        }\r\n\r\n        this.submit = this.submit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    formIsUnchanged() {\r\n        return (\r\n            this.state.label === \"\" ||\r\n            this.state.capacity === \"\"\r\n        )\r\n    }\r\n\r\n    submit() {\r\n        if (this.formIsUnchanged()) {\r\n            return\r\n        }\r\n        this.props.handleClick(this.state)\r\n        this.setState({\r\n            label: \"\",\r\n            sm_capacity: \"\"\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Form>\r\n                <FormGroup>\r\n                    <Form.Label>Nom de zone</Form.Label>\r\n                    <FormControl as={\"input\"} name=\"label\" type=\"text\" value={this.state.label} placeholder=\"Nom de la zone\"\r\n                                 onChange={this.handleChange}/>\r\n\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Form.Label>Capacité</Form.Label>\r\n                    <FormControl as={\"input\"} name=\"sm_capacity\" type=\"number\" value={this.state.sm_capacity} placeholder=\"Capacité\"\r\n                                 onChange={this.handleChange}/>\r\n                </FormGroup>\r\n\r\n                <Button onClick={this.submit} variant={\"link\"}>Ajouter</Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ZoneForm\r\n","import {Component} from \"react\"\r\nimport {Form, FormControl, Button, FormGroup} from \"react-bootstrap\";\r\n\r\nconst EditorHandler = require(\"../editor/EditorHandler\")\r\n\r\nclass GamesBookedForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            _id: \"\",\r\n            gameSelected: {\r\n                _id: \"\", name: \"\",\r\n                editor: {\r\n                    _id: \"\",\r\n                    name: \"\",\r\n                    games: []\r\n                }\r\n            },\r\n            editors: []\r\n        }\r\n\r\n        this.submit = this.submit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleEditorChange = this.handleEditorChange.bind(this)\r\n        this.handleGameChange = this.handleGameChange.bind(this)\r\n    }\r\n    componentDidMount() {\r\n        EditorHandler.getEditorsFromDB()\r\n            .then(editors => editors.filter(editor =>{\r\n                return editor.isEditor\r\n            }))\r\n            .then(editors => this.setState({\r\n                editors: editors\r\n            }))\r\n            .then(() =>\r\n                EditorHandler.getGamesFromEditor(this.state.editors[0]._id)\r\n                    .then(games => this.state.editors[0].games = games)\r\n                    .then(() => this.setState({editors: this.state.editors}))\r\n                    .then(() => this.setState({\r\n                        gameSelected: {\r\n                            _id: this.state.editors[0].games[0]._id,\r\n                            name: this.state.editors[0].games[0].name,\r\n                            category: this.state.editors[0].games[0].category,\r\n                            duration: this.state.editors[0].games[0].duration,\r\n                            min_yearold: this.state.editors[0].games[0].min_yearold,\r\n                            editor: this.state.editors[0]\r\n                        }\r\n                    }))\r\n            )\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleEditorChange(event) {\r\n        const target = event.target;\r\n        const value = target.value\r\n\r\n        const editor = this.state.editors.filter(editor => {\r\n            return editor._id === value\r\n        })\r\n\r\n        this.setState({\r\n                editor: editor[0]\r\n            }, () => {\r\n                EditorHandler.getGamesFromEditor(value)\r\n                    .then(games => editor[0].games = games)\r\n                    .then(() => this.setState({editor: editor[0]}))\r\n                    .then(() => this.state.gameSelected = editor[0].games[0])\r\n                    .then(() => this.state.gameSelected.editor = editor[0])\r\n                    .then(() => this.setState({gameSelected: this.state.gameSelected}))\r\n            }\r\n        )\r\n    }\r\n\r\n    handleGameChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const game = this.state.editor.games.filter(game => {\r\n            return game._id === value\r\n        })\r\n        game[0].editor = this.state.editor\r\n\r\n        this.setState({gameSelected: game[0]})\r\n    }\r\n\r\n    submit() {\r\n        this.props.handleClick(this.state.gameSelected)\r\n    }\r\n\r\n    render() {\r\n        const editorRows = this.state.editors.map(editor =>\r\n            <option key={editor._id} value={editor._id}>\r\n                {editor.name}</option>\r\n        )\r\n\r\n        const editorGamesDefined = this.state.gameSelected.editor.games? this.state.gameSelected.editor.games: []\r\n        const editorGames = editorGamesDefined.map(game =>\r\n            <option value={game._id}>{game.name}</option>\r\n        )\r\n        let form\r\n        form = (\r\n            <FormGroup>\r\n                <Form.Label>Jeux</Form.Label>\r\n                <FormControl as={\"select\"} onChange={this.handleGameChange}>\r\n                    {editorGames}\r\n                </FormControl>\r\n            </FormGroup>\r\n        )\r\n\r\n        return (\r\n            <Form>\r\n                <FormGroup>\r\n                    <Form.Label>Editeur</Form.Label>\r\n                    <FormControl\r\n                        as={\"select\"}\r\n                        onChange={this.handleEditorChange}\r\n                    >\r\n                        {editorRows}\r\n                    </FormControl>\r\n                </FormGroup>\r\n\r\n                {form}\r\n\r\n                <Button onClick={this.submit} variant={\"link\"}>Ajouter à la réservation</Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GamesBookedForm\r\n","import {Button, Modal} from \"react-bootstrap\";\r\nimport img from \"../../public/img/addFiles.svg\"\r\nimport \"../editor/css/FormContainer.css\"\r\nimport EditorForm from \"../editor/EditorForm\";\r\nimport GameForm from \"../games/GameForm\";\r\nimport FestivalForm from \"../festivals/FestivalForm\";\r\nimport ReservationForm from \"../reservations/ReservationForm\";\r\nimport GamesBookedForm from \"../reservations/gamesBooked/GamesBookedForm\";\r\nimport ZoneForm from \"../zone/ZoneForm\";\r\nimport GameZoneForm from \"../zone/GameZoneForm\";\r\n\r\nconst {useState} = require(\"react\");\r\n\r\nfunction FormContainer(props) {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    let form\r\n    if(props.component === \"EditorForm\") {\r\n        form = <EditorForm handleClick={props.handleClick}/>\r\n\r\n    } else if(props.component === \"GameForm\") {\r\n        form = <GameForm\r\n            handleClick={props.handleClick}\r\n            editorId={props.editorId}\r\n            editorName={props.editorName}\r\n        />\r\n\r\n    } else if(props.component === \"FestivalForm\") {\r\n        form = <FestivalForm handleClick={props.handleClick}/>\r\n\r\n    } else if(props.component === \"ReservationForm\") {\r\n        form = <ReservationForm exhibitors={props.exhibitors} handleClick={props.handleClick}/>\r\n\r\n    } else if(props.component === \"GamesBookedForm\") {\r\n        form = <GamesBookedForm\r\n            reservationId={props.reservationId}\r\n            handleClick={props.handleClick}\r\n        />\r\n    } else if(props.component === \"ZoneForm\") {\r\n        form = <ZoneForm\r\n            handleClick={props.handleClick}\r\n        />\r\n    } else if(props.component === \"GameZoneForm\") {\r\n        form = <GameZoneForm\r\n            handleClick={props.handleClick}\r\n        />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Button onClick={handleShow} variant={\"success\"}>\r\n                <img src={img} alt={\"Ajouter\"}/>\r\n            </Button>\r\n\r\n            <Modal\r\n                show={show}\r\n                onHide={handleClose}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{props.title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    {form}\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={handleClose}>Retour</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default FormContainer\r\n","import {Component} from \"react\"\r\n\r\nimport SearchBar from \"../search/Search\";\r\nimport Filter from \"../search/Filter\";\r\nimport {Card, Table} from \"react-bootstrap\";\r\nimport FestivalTable from \"./FestivalTable\";\r\nimport FormContainer from \"../Modal/FormContainer\";\r\nconst FestivalHandler = require(\"./FestivalHandler\")\r\n\r\n\r\nclass FilterableFestivalsTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            festivals: \"\",\r\n            filterText: \"\",\r\n            filterEnglish: \"name\",\r\n            filterFrench: \"nom\"\r\n        }\r\n\r\n        this.handleFilterTextChange = this.handleFilterTextChange.bind(this)\r\n        this.handleFilterChange = this.handleFilterChange.bind(this)\r\n        this.handleAddFestival = this.handleAddFestival.bind(this)\r\n        this.handleDelete = this.handleDelete.bind(this)\r\n        this.handleUpdate = this.handleUpdate.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        FestivalHandler.getFestivalsFromDB()\r\n            .then(festivals => {\r\n                this.setState({\r\n                    festivals: festivals\r\n                })\r\n            })\r\n        FestivalHandler.setHandleDelete(this.handleDelete)\r\n        FestivalHandler.setHandleUpdate(this.handleUpdate)\r\n    }\r\n\r\n    handleFilterTextChange(filterText) {\r\n        this.setState({\r\n            filterText: filterText\r\n        })\r\n    }\r\n\r\n    handleFilterChange(filterEnglish, filterFrench) {\r\n        this.setState({\r\n            filterEnglish: filterEnglish,\r\n            filterFrench: filterFrench\r\n        })\r\n    }\r\n\r\n    handleAddFestival(festival) {\r\n        FestivalHandler.addFestival(festival)\r\n            .then(response => response.json())\r\n            .then(response => festival._id = response.f._id)\r\n            .then(() => this.state.festivals.push({\r\n                f: festival,\r\n                nb_rt_premium: 0,\r\n                nb_rt_standard: 0,\r\n                nb_rt_low: 0,\r\n                nb_rsm_premium: 0,\r\n                nb_rsm_standard: 0,\r\n                nb_rsm_low: 0\r\n            }))\r\n            .then(() => this.setState({festivals: this.state.festivals}))\r\n            .then(() => console.log(\"state\", this.state.festivals))\r\n    }\r\n\r\n    handleDelete(festivalId) {\r\n        this.setState({\r\n            festivals: this.state.festivals.filter(festival => {\r\n                return festival.f._id !== festivalId\r\n            })\r\n        })\r\n    }\r\n\r\n    handleUpdate(festivalId, checked) {\r\n        // UnCheck current to passive\r\n        const festivalChecked = this.state.festivals.filter(festival => {\r\n            return festival.f._id !== festivalId\r\n        })\r\n        festivalChecked.map(festival =>\r\n            festival.f.is_current = false\r\n        )\r\n\r\n        // Check to current\r\n        const festival = this.state.festivals.filter(festival => {\r\n            return festival.f._id === festivalId\r\n        })\r\n        festival[0].f.is_current = checked\r\n\r\n        this.setState({festivals: this.state.festivals})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Table striped bordered hover>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <Filter\r\n                                filters={[\r\n                                    {english: \"name\", french: \"nom\"},\r\n                                    {english: \"year\", french: \"année\"}\r\n                                ]}\r\n                                onFilterChange={this.handleFilterChange}\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <SearchBar\r\n                                filterText={this.state.filterText}\r\n                                filter={{english: this.state.filterEnglish, french: this.state.filterFrench}}\r\n                                onFilterTextChange={this.handleFilterTextChange}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </Table>\r\n                <Card style={{width: '4rem'}}>\r\n                    <FormContainer\r\n                        title={\"Ajouter un festival\"}\r\n                        component={\"FestivalForm\"}\r\n                        handleClick={this.handleAddFestival}/>\r\n                </Card>\r\n                <FestivalTable\r\n                    festivals={this.state.festivals}\r\n                    filterText={this.state.filterText}\r\n                    filter={this.state.filterEnglish}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterableFestivalsTable\r\n","import {Component} from \"react\"\r\nimport {Table} from \"react-bootstrap\";\r\n\r\nconst BillHandler = require(\"./BillHandler\")\r\n\r\nclass BillTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.rows = []\r\n        this.state = {\r\n            rows: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let rows\r\n        if(this.props.filter === \"name\") {\r\n            rows = BillHandler.filterBillByName(this.props.bills, this.props.filterText.toLowerCase())\r\n        }\r\n        else {\r\n        }\r\n        return (\r\n            <Table striped bordered hover size={\"sm\"}>\r\n                <thead>\r\n                <tr>\r\n                    <th>Nom</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>{rows}</tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BillTable\r\n","import {Component} from \"react\"\r\n\r\nimport SearchBar from \"../search/Search\";\r\nimport Filter from \"../search/Filter\";\r\nimport {Table} from \"react-bootstrap\";\r\nimport BillTable from \"./BillTable\";\r\nconst BillHandler = require(\"./BillHandler\")\r\n\r\nclass FilterableBillsTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            bills: \"\",\r\n            filterText: \"\",\r\n            filterEnglish: \"name\",\r\n            filterFrench: \"Nom\"\r\n        }\r\n\r\n        this.handleFilterTextChange = this.handleFilterTextChange.bind(this)\r\n        this.handleFilterChange = this.handleFilterChange.bind(this)\r\n        this.handleAddBill = this.handleAddBill.bind(this)\r\n        this.handleDelete = this.handleDelete.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        BillHandler.getBillsFromDB()\r\n            .then(Bills => {\r\n                this.setState({\r\n                    Bills: Bills\r\n                })\r\n            })\r\n        BillHandler.setHandleDelete(this.handleDelete)\r\n    }\r\n\r\n    handleFilterTextChange(filterText) {\r\n        this.setState({\r\n            filterText: filterText\r\n        })\r\n    }\r\n\r\n    handleFilterChange(filterEnglish, filterFrench) {\r\n        this.setState({\r\n            filterEnglish: filterEnglish,\r\n            filterFrench: filterFrench\r\n        })\r\n    }\r\n\r\n    handleAddBill(bill) {\r\n        BillHandler.addBill(bill)\r\n            .then(response => response.json())\r\n            .then(response => bill._id = response.billId)\r\n            .then(() => this.state.bills.push(bill))\r\n            .then(() => this.setState({bills: this.state.bills}))\r\n    }\r\n\r\n    handleDelete(billId) {\r\n        this.setState({\r\n            bills: this.state.bills.filter((bill) => {\r\n                return bill._id !== billId\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <Filter\r\n                                filters={[\r\n                                    {english: \"name\", french: \"nom\"},\r\n                                ]}\r\n                                onFilterChange={this.handleFilterChange}\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <SearchBar\r\n                                filterText={this.state.filterText}\r\n                                filter={{english: this.state.filterEnglish, french: this.state.filterFrench}}\r\n                                onFilterTextChange={this.handleFilterTextChange}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </Table>\r\n                <BillTable\r\n                    bills={this.state.bills}\r\n                    filterText={this.state.filterText}\r\n                    filter={this.state.filterEnglish}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterableBillsTable\r\n","import {Component} from \"react\"\r\nimport React from \"react\"\r\n\r\nimport {Table} from \"react-bootstrap\";\r\n\r\nconst EditorHandler = require(\"./EditorHandler\")\r\n\r\nclass EditorTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            rows: []\r\n        }\r\n    }\r\n\r\n    // TODO faire état de la résa\r\n    render() {\r\n        let rows\r\n\r\n        if(this.props.editorOnly) {\r\n            rows = EditorHandler.filterEditorByEditorOnly(this.props.editors)\r\n        }\r\n        else if(this.props.exhibitorOnly) {\r\n            rows = EditorHandler.filterEditorByExhibitorOnly(this.props.editors)\r\n        }\r\n        else {\r\n            rows = EditorHandler.filterEditorByName(this.props.editors, this.props.filterText.toLowerCase())\r\n        }\r\n\r\n        return (\r\n            <Table striped bordered hover size={\"sm\"}>\r\n                <thead>\r\n                <tr>\r\n                    <th>Nom</th>\r\n                    <th>Etat de réservation</th>\r\n                    <th>Contact</th>\r\n                    <th>Editeur</th>\r\n                    <th>Exposant</th>\r\n                    <th>Potentiel</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>{rows}</tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditorTable\r\n","import {Component} from \"react\"\r\nimport React from \"react\"\r\n\r\nimport {Table} from \"react-bootstrap\";\r\n\r\nconst ExhibitorHandler = require(\"./ExhibitorHandler\")\r\n\r\nclass EditorTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            rows: []\r\n        }\r\n    }\r\n    render() {\r\n        let rows\r\n\r\n        if(this.props.filter === \"name\") {\r\n            rows = ExhibitorHandler.filterEditorByName(this.props.exhibitors, this.props.filterText)\r\n        }\r\n        else {\r\n            rows = ExhibitorHandler.filterEditorByPotentialOnly(this.props.exhibitors)\r\n        }\r\n\r\n        return (\r\n            <Table striped bordered hover size={\"sm\"}>\r\n                <thead>\r\n                <tr>\r\n                    <th>Nom</th>\r\n                    <th>Contact</th>\r\n                    <th/>\r\n                </tr>\r\n                </thead>\r\n                <tbody>{rows}</tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditorTable\r\n","import {Component} from \"react\"\r\n\r\nimport SearchBar from \"../search/Search\";\r\nimport Filter from \"../search/Filter\";\r\nimport {Card, Table} from \"react-bootstrap\";\r\nimport EditorTable from \"./EditorTable\";\r\nimport FormContainer from \"../Modal/FormContainer\";\r\nimport ExhibitorTable from \"./exhibitor/ExhibitorTable\";\r\nimport EditorForm from \"./EditorForm\";\r\n\r\nclass FilterableEditorsTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            filterText: \"\",\r\n            filterEnglish: \"name\",\r\n            filterFrench: \"nom\"\r\n        }\r\n\r\n        this.handleFilterTextChange = this.handleFilterTextChange.bind(this)\r\n        this.handleFilterChange = this.handleFilterChange.bind(this)\r\n        this.handleAddEditor = this.handleAddEditor.bind(this)\r\n    }\r\n\r\n    handleFilterTextChange(filterText) {\r\n        this.setState({\r\n            filterText: filterText\r\n        })\r\n    }\r\n\r\n    handleFilterChange(filterEnglish, filterFrench) {\r\n        this.setState({\r\n            filterEnglish: filterEnglish,\r\n            filterFrench: filterFrench\r\n        })\r\n    }\r\n\r\n    handleAddEditor(editor) {\r\n        this.props.handleAddEditor(editor)\r\n    }\r\n\r\n    render() {\r\n        let cardForm\r\n\r\n        if(this.props.showForm) {\r\n            cardForm = (\r\n                <Card style={{width: '4rem'}}>\r\n                    <FormContainer\r\n                        title={\"Ajouter un éditeur/exposant\"}\r\n                        handleClick={this.handleAddEditor}\r\n                        component={\"EditorForm\"}\r\n                    />\r\n                </Card>\r\n            )\r\n        }\r\n\r\n        let search\r\n\r\n        if(this.props.showSearch) {\r\n            search = (\r\n                <Table striped bordered hover>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <Filter\r\n                                filters={[\r\n                                    {english: \"name\", french: \"nom\"},\r\n                                ]}\r\n                                onFilterChange={this.handleFilterChange}\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <SearchBar\r\n                                filterText={this.state.filterText}\r\n                                filter={{english: this.state.filterEnglish, french: this.state.filterFrench}}\r\n                                onFilterTextChange={this.handleFilterTextChange}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </Table>\r\n            )\r\n        }\r\n\r\n        let table\r\n        if(this.props.editors) {\r\n            table = (\r\n                <EditorTable\r\n                    editors={this.props.editors}\r\n                    filterText={this.state.filterText}\r\n                    filter={this.state.filterEnglish}\r\n                    editorOnly={this.props.editorOnly}\r\n                    exhibitorOnly={this.props.exhibitorOnly}\r\n                    potentialOnly={this.props.potentialOnly}\r\n                />\r\n            )\r\n        }\r\n\r\n        else {\r\n            table = (\r\n                <ExhibitorTable\r\n                    exhibitors={this.props.exhibitors}\r\n                    filterText={this.state.filterText}\r\n                    filter={this.state.filterEnglish}\r\n                />\r\n            )\r\n        }\r\n        return (\r\n            <div>\r\n                {search}\r\n                {cardForm}\r\n                {table}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterableEditorsTable\r\n","import {Component} from \"react\"\r\n\r\nimport {Tab, Tabs} from \"react-bootstrap\";\r\nimport FilteredEditorsTable from \"./FilteredEditorsTable\";\r\n\r\nconst EditorHandler = require(\"./EditorHandler\")\r\n\r\nclass EditorTabs extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {editors: []}\r\n\r\n        this.handleDelete = this.handleDelete.bind(this)\r\n        this.handleAddEditor = this.handleAddEditor.bind(this)\r\n        this.handleUpdate = this.handleUpdate.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        EditorHandler.getEditorsFromDB()\r\n            .then(editors =>\r\n                this.setState({editors: editors})\r\n            )\r\n        EditorHandler.setHandleDelete(this.handleDelete)\r\n        EditorHandler.setHandleUpdate(this.handleUpdate)\r\n    }\r\n\r\n    handleDelete(editorId) {\r\n        this.setState({\r\n            editors: this.state.editors.filter((editor) => {\r\n                return editor._id !== editorId\r\n            })\r\n        })\r\n    }\r\n\r\n    handleUpdate(editorId, attribute, checked) {\r\n        const editor = this.state.editors.filter((editor) => {\r\n            return editor._id === editorId\r\n        })\r\n\r\n        if(attribute === \"isEditor\") {\r\n            editor[0].isEditor = checked\r\n        } else if(attribute === \"isExhibitor\") {\r\n            editor[0].isExhibitor = checked\r\n        } else {\r\n            editor[0].isPotential = checked\r\n        }\r\n        this.setState({editors: this.state.editors})\r\n    }\r\n\r\n    handleAddEditor(editor) {\r\n        EditorHandler.addEditor(editor)\r\n            .then(response => response.json())\r\n            .then(response => editor._id = response.editorId)\r\n            .then(() => this.state.editors.push(editor))\r\n            .then(() => this.setState({editors: this.state.editors}))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Tabs defaultActiveKey=\"all\">\r\n                <Tab eventKey=\"all\" title=\"Tout\">\r\n                    <FilteredEditorsTable editorOnly={false} exhibitorOnly={false} potentialOnly={false}\r\n                                          editors={this.state.editors} handleAddEditor={this.handleAddEditor}\r\n                                          showForm={true} showSearch={true}\r\n                    />\r\n                </Tab>\r\n                <Tab eventKey=\"Editeur\" title=\"Editeur potentiel\">\r\n                    <FilteredEditorsTable editorOnly={true} exhibitorOnly={false} potentialOnly={true}\r\n                                          editors={this.state.editors} handleAddEditor={this.handleAddEditor}\r\n                                          showForm={false} showSearch={false}\r\n                    />\r\n                </Tab>\r\n                <Tab eventKey=\"Exhibitor\" title=\"Exposant potentiel\">\r\n                    <FilteredEditorsTable editorOnly={false} exhibitorOnly={true} potentialOnly={true}\r\n                                          editors={this.state.editors} handleAddEditor={this.handleAddEditor}\r\n                                          showForm={false} showSearch={false}\r\n                    />\r\n                </Tab>\r\n            </Tabs>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditorTabs\r\n","import {Component} from \"react\"\r\nimport {Table} from \"react-bootstrap\";\r\n\r\nconst ReservationHandler = require(\"./ReservationHandler\")\r\n\r\nclass ReservationTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.rows = []\r\n        this.state = {\r\n            rows: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let rows\r\n        if(this.props.filter === \"name\") {\r\n            rows = ReservationHandler.filterReservationByName(this.props.reservations, this.props.filterText.toLowerCase())\r\n        } else {\r\n            rows = ReservationHandler.filterReservationByState(this.props.reservations, this.props.filterText.toLowerCase())\r\n        }\r\n\r\n        if(this.props.need_volunteer) {\r\n            rows = ReservationHandler.filterEditorByVolunteer(rows)\r\n        }\r\n        if(this.props.isEditorHere) {\r\n            rows = ReservationHandler.filterEditorByEditorPresent(rows)\r\n        }\r\n        if(this.props.reportSent) {\r\n            rows = ReservationHandler.filterEditorByReportSent(rows)\r\n        }\r\n\r\n        rows = ReservationHandler.mapCreateReservation(rows)\r\n\r\n        return (\r\n            <Table striped bordered hover size={\"sm\"}>\r\n                <thead>\r\n                <tr>\r\n                    <th>Nom exposant</th>\r\n                    <th>Commentaire</th>\r\n                    <th>état</th>\r\n                    <th>Besoin de bénévoles ?</th>\r\n                    <th>Editeur présent ?</th>\r\n                    <th>CR envoyé ?</th>\r\n                    <th>table</th>\r\n                    <th>m²</th>\r\n                    <th>Total</th>\r\n                    <th/>\r\n                </tr>\r\n                </thead>\r\n                <tbody>{rows}</tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReservationTable\r\n","import {Component} from \"react\";\r\nimport {Form} from \"react-bootstrap\";\r\n\r\nclass FilterCheck extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <td>\r\n                    <Form.Label>\r\n                        Besoins de bénévoles ?\r\n                    <Form.Check name={\"need_volunteer\"}\r\n                                onChange={this.props.onChecked} checked={this.props.need_volunteer}\r\n                    />\r\n                    </Form.Label>\r\n                </td>\r\n                <td>\r\n                    <Form.Label>\r\n                        Editeur présent ?\r\n                    <Form.Check name={\"isEditorHere\"}\r\n                                onChange={this.props.onChecked} checked={this.props.isEditorHere}\r\n                    />\r\n                    </Form.Label>\r\n                </td>\r\n                <td>\r\n                    <Form.Label>\r\n                        CR envoyé ?\r\n                    <Form.Check name={\"reportSent\"}\r\n                                onChange={this.props.onChecked} checked={this.props.reportSent}\r\n                    />\r\n                    </Form.Label>\r\n                </td>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterCheck\r\n","import {Component} from \"react\"\r\n\r\nimport SearchBar from \"../search/Search\";\r\nimport Filter from \"../search/Filter\";\r\nimport {Card, Table} from \"react-bootstrap\";\r\nimport ReservationTable from \"./ReservationTable\";\r\nimport FormContainer from \"../Modal/FormContainer\";\r\nimport FilterCheck from \"../search/FilterCheck\";\r\n\r\nclass FilterableReservationsTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editors: \"\",\r\n            filterText: \"\",\r\n            need_volunteer: false,\r\n            reportSent: false,\r\n            isEditorHere: false,\r\n            filterEnglish: \"name\",\r\n            filterFrench: \"nom\"\r\n        }\r\n\r\n        this.handleFilterTextChange = this.handleFilterTextChange.bind(this)\r\n        this.handleFilterChange = this.handleFilterChange.bind(this)\r\n        this.handleFilterCheckedChange = this.handleFilterCheckedChange.bind(this)\r\n    }\r\n\r\n    handleFilterTextChange(filterText) {\r\n        this.setState({\r\n            filterText: filterText\r\n        })\r\n    }\r\n\r\n    handleFilterChange(filterEnglish, filterFrench) {\r\n        this.setState({\r\n            filterEnglish: filterEnglish,\r\n            filterFrench: filterFrench\r\n        })\r\n    }\r\n\r\n    handleFilterCheckedChange(event) {\r\n        const target = event.target\r\n        const name = target.name\r\n        const value = target.checked\r\n\r\n        if(name === \"need_volunteer\"){\r\n            this.state.need_volunteer = value\r\n        } else if(name === \"reportSent\") {\r\n            this.state.reportSent = value\r\n        } else {\r\n            this.state.isEditorHere = value\r\n        }\r\n        this.setState({[name]: value})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <Filter\r\n                                filters={[\r\n                                    {english: \"name\", french: \"nom\"},\r\n                                    {english: \"state\", french: \"état\"}\r\n                                ]}\r\n                                onFilterChange={this.handleFilterChange}\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <SearchBar\r\n                                filterText={this.state.filterText}\r\n                                filter={{english: this.state.filterEnglish, french: this.state.filterFrench}}\r\n                                onFilterTextChange={this.handleFilterTextChange}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <FilterCheck\r\n                            onChecked={this.handleFilterCheckedChange}\r\n                            need_volunteer={this.state.need_volunteer}\r\n                            reportSent={this.state.reportSent}\r\n                            isEditorHere={this.state.isEditorHere}\r\n                            />\r\n                    </tr>\r\n                    </tbody>\r\n                </Table>\r\n                <Card style={{width: '4rem'}}>\r\n                    <FormContainer\r\n                        title={\"Créer une réservation\"}\r\n                        component={\"ReservationForm\"}\r\n                        exhibitors={this.props.exhibitors}\r\n                        handleClick={this.props.handleAddReservation}\r\n                    />\r\n                </Card>\r\n                <ReservationTable\r\n                    reservations={this.props.reservations}\r\n                    need_volunteer={this.state.need_volunteer}\r\n                    reportSent={this.state.reportSent}\r\n                    isEditorHere={this.state.isEditorHere}\r\n                    filterText={this.state.filterText}\r\n                    filter={this.state.filterEnglish}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterableReservationsTable\r\n","import {Component} from \"react\"\r\nimport {Tab, Tabs} from \"react-bootstrap\";\r\nimport FilteredReservationsTable from \"./FilteredReservationsTable\";\r\nimport FilteredEditorsTable from \"../editor/FilteredEditorsTable\";\r\n\r\nconst ExhibitorHandler = require(\"../editor/exhibitor/ExhibitorHandler\")\r\nconst ReservationHandler = require(\"../reservations/ReservationHandler\")\r\n\r\nclass TabsReservations extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            exhibitors: \"\",\r\n            reservations: [{}]\r\n        }\r\n        this.handleAddReservation = this.handleAddReservation.bind(this)\r\n        this.handleDelete = this.handleDelete.bind(this)\r\n        this.handleUpdateCheck = this.handleUpdateCheck.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        ExhibitorHandler.getExhibitorsFromDB()\r\n            .then(exhibitors =>\r\n                this.setState({exhibitors: exhibitors})\r\n            )\r\n        ReservationHandler.getReservationsFromDB()\r\n            .then(reservations => {\r\n                this.setState({\r\n                    reservations: reservations\r\n                })\r\n            })\r\n        ReservationHandler.setAddHandler(this.handleAddReservation)\r\n        ReservationHandler.setHandleDelete(this.handleDelete)\r\n        ReservationHandler.setUpdateHandlerCheck(this.handleUpdateCheck)\r\n    }\r\n\r\n    handleAddReservation(reservation) {\r\n        ReservationHandler.addReservation(reservation)\r\n            .then(response => response.json())\r\n            .then(res => res.response)\r\n            .then(res => this.state.reservations.push({\r\n                reservation: res.reservation,\r\n                exhibitor: res.exhibitor\r\n            }))\r\n            .then(() => this.setState({reservations: this.state.reservations}))\r\n    }\r\n\r\n    handleDelete(reservationId) {\r\n        this.setState({\r\n            reservations: this.state.reservations.filter((reservation) => {\r\n                return reservation.reservation._id !== reservationId\r\n            })\r\n        })\r\n    }\r\n\r\n    handleUpdateCheck(reservationId, attribute, checked) {\r\n        const reservation = this.state.reservations.filter((reservation) => {\r\n            return reservation.reservation._id === reservationId\r\n        })\r\n\r\n        if(attribute === \"need_volunteer\") {\r\n            reservation[0].reservation.need_volunteer = checked\r\n        } else if(attribute === \"reportSent\") {\r\n            reservation[0].reservation.reportSent = checked\r\n        } else {\r\n            reservation[0].reservation.isEditorHere = checked\r\n        }\r\n        this.setState({reservations: this.state.reservations})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Tabs\r\n                defaultActiveKey=\"reservation\"\r\n            >\r\n                <Tab eventKey=\"reservation\" title=\"Suivi réservations\">\r\n                    <FilteredReservationsTable\r\n                        reservations={this.state.reservations}\r\n                        exhibitors={this.state.exhibitors}\r\n                        handleAddReservation={this.handleAddReservation}\r\n                    />\r\n                </Tab>\r\n                <Tab eventKey=\"exposant\" title=\"Exposant potentiel\">\r\n                    <FilteredEditorsTable exhibitorOnly={true} potentialOnly={true}\r\n                                          exhibitors={this.state.exhibitors} showSearch={true}\r\n                    />\r\n                </Tab>\r\n            </Tabs>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TabsReservations\r\n","import {Component} from \"react\"\r\nimport {Table} from \"react-bootstrap\";\r\n\r\nconst GameHandler = require(\"../games/GamesHandler\")\r\n\r\nclass EditorGamesTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.rows = []\r\n        this.state = {\r\n            rows: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const rows = this.props.editor.games.map(game =>\r\n                GameHandler.createGameFromEditor(game)\r\n            )\r\n\r\n        return (\r\n            <Table striped bordered hover size={\"sm\"}>\r\n                <thead>\r\n                <tr>\r\n                    <th>Nom du jeu</th>\r\n                    <th>Catégorie</th>\r\n                    <th>Durée en minutes</th>\r\n                    <th>Âge requis</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>{rows}</tbody>\r\n            </Table>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditorGamesTable\r\n","import {Component} from \"react\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {Card, Col, Form, FormControl, FormGroup, Row} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport EditorGamesTable from \"./EditorGamesTable\";\r\nimport GameForm from \"../games/GameForm\";\r\nimport FormContainer from \"../Modal/FormContainer\";\r\n\r\nconst EditorHandler = require(\"./EditorHandler\")\r\nconst GameHandler = require(\"../games/GamesHandler\")\r\n\r\nclass EditorDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            _id: \"\",\r\n            name: \"\",\r\n            contacts: [],\r\n            isEditor: \"\",\r\n            isExhibitor: \"\",\r\n            isPotential: \"\",\r\n            games: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.handleContactsChange = this.handleContactsChange.bind(this)\r\n        this.submit = this.submit.bind(this)\r\n        this.handleAddGame = this.handleAddGame.bind(this)\r\n        this.handleDelete = this.handleDelete.bind(this)\r\n        this.addContact = this.addContact.bind(this)\r\n        this.removeContacts = this.removeContacts.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        EditorHandler.getEditorFromDB(window.location.href.split('/')[5])\r\n            .then(editor => this.setState({\r\n                _id: editor._id,\r\n                name: editor.name,\r\n                contacts: editor.contacts,\r\n                isEditor: editor.isEditor,\r\n                isExhibitor: editor.isExhibitor,\r\n                isPotential: editor.isPotential\r\n            }))\r\n            .then(() => EditorHandler.getGamesFromEditor(this.state._id)\r\n                .then(games => this.setState({games: games}))\r\n            )\r\n            .then(() => GameHandler.setHandleDelete(this.handleDelete))\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    handleContactsChange(event) {\r\n        const target = event.target\r\n        const value = target.value\r\n        const index = target.name;\r\n\r\n        let contacts = this.state.contacts\r\n        contacts[index] = value\r\n\r\n        this.setState({contacts: contacts})\r\n    }\r\n\r\n    submit() {\r\n        EditorHandler.updateEditor(this.state)\r\n            .then(() => this.setState({redirect: \"/nav/editeurs\"}))\r\n    }\r\n\r\n    handleAddGame(game) {\r\n        GameHandler.addGames(game)\r\n            .then(response => response.json())\r\n            .then(response => game._id = response.gameId)\r\n            .then(() => this.state.games.push(game))\r\n            .then(() => this.setState({games: this.state.games}))\r\n    }\r\n\r\n    handleDelete(gameId) {\r\n        this.setState({\r\n            games: this.state.games.filter(game => {\r\n                return game._id !== gameId\r\n            })\r\n        })\r\n    }\r\n\r\n    addContact() {\r\n        this.state.contacts.push(\"\")\r\n        this.setState({contacts: this.state.contacts})\r\n    }\r\n\r\n    removeContacts() {\r\n        this.state.contacts.pop()\r\n        this.setState({contacts: this.state.contacts})\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return <Redirect to={this.state.redirect}/>\r\n        }\r\n        const rows = this.state.contacts.map((contact, index) => {\r\n            return (\r\n                <>\r\n                    <FormControl\r\n                        as={\"input\"} type={\"text\"} value={contact} key={index}\r\n                        onChange={this.handleContactsChange} name={index}/>\r\n                </>\r\n            )\r\n        })\r\n\r\n        let games\r\n        if(this.state.isEditor) {\r\n            games = (\r\n                <>\r\n                <Form.Label>Jeux de l'éditeur</Form.Label>\r\n                    <Card style={{width: '4rem'}}>\r\n                    <FormContainer\r\n                        title={\"Ajouter un jeu à l'éditeur\"}\r\n                        component={\"GameForm\"}\r\n                        handleClick={this.handleAddGame}\r\n                        editorId={this.state._id}\r\n                        editorName={this.state.name}\r\n                    />\r\n                    </Card>\r\n                <EditorGamesTable\r\n                    editor={this.state}\r\n                />\r\n                </>\r\n                )\r\n        }\r\n\r\n        return (\r\n            <Form style={{margin: '1em'}}>\r\n                <FormGroup>\r\n                    <Form.Label>Nom de l'entreprise</Form.Label>\r\n                    <FormControl\r\n                        as={\"input\"} value={this.state.name} type={\"text\"}\r\n                        onChange={this.handleChange} name={\"name\"}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Label>Contacts</Form.Label>\r\n                        </Col>\r\n                        <Col>\r\n                            <Button variant={\"warning\"} onClick={this.addContact}>Ajouter contact</Button>\r\n                            <Button variant={\"warning\"} onClick={this.removeContacts}>Enlever contact</Button>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card>\r\n                                {rows}\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Check checked={this.state.isEditor} label={\"Editeur ?\"}\r\n                                        onChange={this.handleChange} id={this.state._id} name={\"isEditor\"}/>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Check checked={this.state.isExhibitor} label={\"Exposant ?\"}\r\n                                        onChange={this.handleChange} id={this.state._id} name={\"isExhibitor\"}/>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Check checked={this.state.isPotential} label={\"Potentiel ?\"}\r\n                                        onChange={this.handleChange} id={this.state._id} name={\"isPotential\"}/>\r\n                        </Col>\r\n                    </Row>\r\n                </FormGroup>\r\n                <Button onClick={this.submit} variant={\"outline-success\"}>Sauvegarder</Button>\r\n                <FormGroup>\r\n                    {games}\r\n                </FormGroup>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditorDetail\r\n","import {Component} from \"react\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {Form, FormControl, FormGroup} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst GamesHandler = require(\"./GamesHandler\")\r\n\r\nclass GameDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            _id: \"\",\r\n            name: \"\",\r\n            category: \"\",\r\n            duration: \"\",\r\n            min_yearold: \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.submit = this.submit.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        GamesHandler.getGameFromDB(window.location.href.split('/')[5])\r\n            .then(res => this.setState({\r\n                _id: res._id,\r\n                name: res.name,\r\n                category: res.category,\r\n                duration: res.duration,\r\n                min_yearold: res.min_yearold,\r\n                editor: res.editor\r\n            }))\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    submit() {\r\n        GamesHandler.updateGame(this.state)\r\n            .then()\r\n        this.setState({redirect: \"/nav/jeux\"})\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return <Redirect to={this.state.redirect}/>\r\n        }\r\n        const optionsCategory = [\r\n            \"Famille\",\r\n            \"Ambiance\",\r\n            \"Expert\",\r\n            \"Enfant\",\r\n            \"Classiqe\",\r\n            \"Famille+\"\r\n        ]\r\n\r\n        const category = optionsCategory.map(cat =>\r\n            <option value={cat.toUpperCase()}>{cat}</option>\r\n        )\r\n\r\n        return (\r\n            <Form style={{margin: '1em'}}>\r\n                <FormGroup>\r\n                    <Form.Label>Nom du jeu</Form.Label>\r\n                    <FormControl\r\n                        as={\"input\"} value={this.state.name} type={\"text\"}\r\n                        onChange={this.handleChange} name={\"name\"}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Form.Label>Catégorie</Form.Label>\r\n                    <FormControl as={\"select\"} name=\"category\" value={this.state.category} onChange={this.handleChange}>\r\n                        {category}\r\n                    </FormControl>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Form.Label>Durée</Form.Label>\r\n                    <FormControl\r\n                        as={\"input\"} value={this.state.duration} type={\"number\"} min={0}\r\n                        onChange={this.handleChange} name={\"duration\"}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Form.Label>âge requis</Form.Label>\r\n                    <FormControl\r\n                        as={\"input\"} value={this.state.min_yearold} type={\"number\"} min={0}\r\n                        onChange={this.handleChange} name={\"min_yearold\"}/>\r\n                </FormGroup>\r\n\r\n                <Button onClick={this.submit} variant={\"outline-success\"}>Sauvegarder</Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameDetail\r\n","import {Form, FormControl, FormGroup} from \"react-bootstrap\"\r\n\r\nfunction GamesBooked(props) {\r\n    const options = [\r\n        \"en attente de réception\",//received=false;bring_by_exhibitor=false;\r\n        \"reçu\",//received=true;bring_by_exhibitor=false;\r\n        \"apporté par exposant\",//received=false;bring_by_exhibitor=true;\r\n        \"à placer\",\r\n        \"à renvoyer\",//proto=true; received=true\r\n        \"renvoyé\"\r\n    ]\r\n    const optionsState = options.map(option =>\r\n        <option id={props.game._id} key={option} value={option}>{option}</option>\r\n    )\r\n\r\n    return (\r\n        <tr id={props.game.game}>\r\n            <td>{props.game.name}</td>\r\n            <td>\r\n                <FormControl\r\n                    as={\"input\"} type={\"number\"}\r\n                    value={props.game.total_qte}\r\n                    id={props.game._id} name={\"total_qte\"}\r\n                    onChange={props.handleChange}\r\n                />\r\n            </td>\r\n            <td>\r\n                <FormControl\r\n                    as={\"input\"} type={\"number\"}\r\n                    max={props.game.total_qte}\r\n                    value={props.game.exposed_qte}\r\n                    id={props.game._id} name={\"exposed_qte\"}\r\n                    onChange={props.handleChange}\r\n                />\r\n            </td>\r\n            <td>\r\n                <FormControl\r\n                    as={\"input\"}\r\n                    name={\"zone\"}\r\n                    value={props.game.zone}\r\n                    id={props.game._id}\r\n                    onChange={props.handleChange}\r\n                />\r\n            </td>\r\n            <td>\r\n                <Form.Check\r\n                    checked={props.game.proto}\r\n                    id={props.game._id} name={\"proto\"}\r\n                    onChange={props.handleChange}\r\n                />\r\n            </td>\r\n            <td>\r\n                <FormGroup value={props.game.state}>\r\n                    <FormControl as={\"select\"} name={\"state\"} id={props.game._id}\r\n                                 value={props.game.state}\r\n                                 onChange={props.handleChange}>\r\n                        {optionsState}\r\n                    </FormControl>\r\n                </FormGroup>\r\n            </td>\r\n            <td><input type={\"button\"} onClick={props.handleDelete} name={props.game._id} value={\"🗑\"}/></td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nexport default GamesBooked\r\n","import {Table} from \"react-bootstrap\";\r\nimport GamesBooked from \"./GamesBooked\";\r\n\r\nfunction GameBookedTable(props){\r\n    const games = props.games.map(game =>\r\n        <GamesBooked\r\n            handleDelete={props.handleDelete}\r\n            handleChange={props.handleChange}\r\n            game={game}\r\n        />\r\n    )\r\n\r\n    return (\r\n        <Table striped bordered hover size={\"sm\"}>\r\n            <thead>\r\n            <tr>\r\n                <th>Nom du jeu</th>\r\n                <th>qté jeu</th>\r\n                <th>qté jeu exposé</th>\r\n                <th>Zone</th>\r\n                <th>Prototype ?</th>\r\n                <th>état</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>{games}</tbody>\r\n        </Table>\r\n        )\r\n}\r\n\r\nexport default GameBookedTable\r\n","import {Component} from \"react\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {Card, Col, Form, FormControl, FormGroup, Row} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport GamesBookedTable from \"./gamesBooked/GamesBookedTable\";\r\nimport FormContainer from \"../Modal/FormContainer\";\r\nimport GamesBookedForm from \"./gamesBooked/GamesBookedForm\";\r\n\r\nconst ReservationHandler = require('./ReservationHandler')\r\nconst EditorHandler = require('../editor/EditorHandler')\r\n\r\nclass ReservationDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            _id: \"\",\r\n            festival: {\r\n                _id: \"\",\r\n                premium_t_price: \"\",\r\n                nb_t_premium: \"\",\r\n                standard_t_price: \"\",\r\n                nb_t_standard: \"\",\r\n                low_t_price: \"\",\r\n                nb_t_low: \"\",\r\n                premium_sm_price: \"\",\r\n                nb_sm_premium: \"\",\r\n                standard_sm_price: \"\",\r\n                nb_sm_standard: \"\",\r\n                low_sm_price: \"\",\r\n                nb_sm_low: \"\"\r\n            },\r\n            exhibitor: {\r\n                _id: \"\",\r\n                name: \"\",\r\n                contacts: []\r\n            },\r\n            comment: \"\",\r\n            state: \"\",\r\n            need_volunteer: \"\",\r\n            isEditorHere: \"\",\r\n            reportSent: \"\",\r\n            nb_t_premium: \"\",\r\n            nb_t_standard: \"\",\r\n            nb_t_low: \"\",\r\n            nb_sm_premium: \"\",\r\n            nb_sm_standard: \"\",\r\n            nb_sm_low: \"\",\r\n            games: [],\r\n            talks: [],\r\n            calculatedPrice: \"\",\r\n            price: \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.submit = this.submit.bind(this)\r\n        this.addContact =this.addContact.bind(this)\r\n        this.removeContact = this.removeContact.bind(this)\r\n        this.handleContactsChange = this.handleContactsChange.bind(this)\r\n        this.calculatePrice = this.calculatePrice.bind(this)\r\n        this.handleAddGame = this.handleAddGame.bind(this)\r\n        this.handleEditorChange = this.handleEditorChange.bind(this)\r\n        this.handleTalksChange = this.handleTalksChange.bind(this)\r\n        this.addTalk = this.addTalk.bind(this)\r\n        this.removeTalk = this.removeTalk.bind(this)\r\n        this.handleDeleteGame = this.handleDeleteGame.bind(this)\r\n        this.handleGameChange = this.handleGameChange.bind(this)\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        ReservationHandler.getReservationFromDB(window.location.href.split('/')[5])\r\n            .then(res => this.setState({\r\n                _id: res.reservation._id,\r\n                exhibitor: {\r\n                    _id: res.exhibitor._id,\r\n                    name: res.exhibitor.name,\r\n                    contacts: res.exhibitor.contacts\r\n                },\r\n                festival: {\r\n                    _id: res.festival._id,\r\n                    premium_t_price: res.festival.premium_t_price,\r\n                    nb_t_premium: res.festival.nb_t_premium,\r\n                    standard_t_price: res.festival.standard_t_price,\r\n                    nb_t_standard: res.festival.nb_t_standard,\r\n                    low_t_price: res.festival.low_t_price,\r\n                    nb_t_low: res.festival.nb_t_low,\r\n                    premium_sm_price: res.festival.premium_sm_price,\r\n                    nb_sm_premium: res.festival.nb_sm_premium,\r\n                    standard_sm_price: res.festival.standard_sm_price,\r\n                    nb_sm_standard: res.festival.nb_sm_standard,\r\n                    low_sm_price: res.festival.low_sm_price,\r\n                    nb_sm_low: res.festival.nb_t_low,\r\n                },\r\n                comment: res.reservation.comment,\r\n                state: res.reservation.state,\r\n                need_volunteer: res.reservation.need_volunteer,\r\n                isEditorHere: res.reservation.isEditorHere,\r\n                reportSent: res.reservation.reportSent,\r\n                nb_t_premium: res.reservation.nb_t_premium,\r\n                nb_t_standard: res.reservation.nb_t_standard,\r\n                nb_t_low: res.reservation.nb_t_low,\r\n                nb_sm_premium: res.reservation.nb_sm_premium,\r\n                nb_sm_standard: res.reservation.nb_sm_standard,\r\n                nb_sm_low: res.reservation.nb_sm_low,\r\n                games: res.reservation.games,\r\n                talks: res.reservation.talks,\r\n                price: res.reservation.price\r\n            }))\r\n            .then(() => this.setState({calculatedPrice: this.calculatePrice()}))\r\n    }\r\n\r\n    calculatePrice() {\r\n        const nb_t_premium = this.state.nb_t_premium? this.state.nb_t_premium:0\r\n        const nb_t_standard = this.state.nb_t_standard?this.state.nb_t_standard:0\r\n        const nb_t_low = this.state.nb_t_low? this.state.nb_t_low:0\r\n\r\n        const nb_sm_premium = this.state.nb_sm_premium? this.state.nb_sm_premium:0\r\n        const nb_sm_standard = this.state.nb_sm_standard? this.state.nb_sm_standard:0\r\n        const nb_sm_low = this.state.nb_sm_low? this.state.nb_sm_low:0\r\n\r\n        return (\r\n            nb_t_premium * this.state.festival.premium_t_price +\r\n            nb_t_standard * this.state.festival.standard_t_price +\r\n            nb_t_low * this.state.festival.low_t_price +\r\n            nb_sm_premium * this.state.festival.premium_sm_price +\r\n            nb_sm_standard * this.state.festival.standard_sm_price +\r\n            nb_sm_low * this.state.festival.low_sm_price\r\n        )\r\n    }\r\n\r\n    addContact() {\r\n        this.state.exhibitor.contacts.push(\"\")\r\n        this.setState({exhibitor: this.state.exhibitor})\r\n    }\r\n\r\n    removeContact() {\r\n        this.state.exhibitor.contacts.pop()\r\n        this.setState({exhibitor: this.state.exhibitor})\r\n    }\r\n\r\n    addTalk() {\r\n        this.state.talks.push(\"\")\r\n        this.setState({talks: this.state.talks})\r\n    }\r\n\r\n    removeTalk() {\r\n        this.state.talks.pop()\r\n        this.setState({talks: this.state.talks})\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        if(target.id) {\r\n            this.setState({\r\n                [name]: value\r\n            }, () => this.setState({calculatedPrice: this.calculatePrice()}))\r\n        } else {\r\n            this.setState({\r\n                [name]: value\r\n            })\r\n        }\r\n    }\r\n\r\n    handleEditorChange(event) {\r\n        const target = event.target\r\n        const value = target.value\r\n        const id = target.id\r\n\r\n        this.setState({\r\n            editor: {\r\n                _id: id,\r\n                name: value\r\n            }})\r\n    }\r\n\r\n    handleContactsChange(event) {\r\n        const target = event.target\r\n        const value = target.value\r\n        const index = target.name;\r\n\r\n        let exhibitor = this.state.exhibitor\r\n        exhibitor.contacts[index] = value\r\n\r\n        this.setState({exhibitor: exhibitor})\r\n    }\r\n\r\n    handleTalksChange(event) {\r\n        const target = event.target\r\n        const value = target.value\r\n        const index = target.name;\r\n\r\n        let talks = this.state.talks\r\n        talks[index] = value\r\n\r\n        this.setState({talks: talks})\r\n    }\r\n\r\n    handleAddGame(game) {\r\n        this.state.games.push(game)\r\n        this.setState({games: this.state.games})\r\n    }\r\n\r\n    handleDeleteGame(event) {\r\n        const gameId = event.target.name\r\n        const games = this.state.games.filter(game => {\r\n            return game._id !== gameId\r\n        })\r\n\r\n        this.setState({games: games})\r\n    }\r\n\r\n    handleGameChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        const gameId = target.id\r\n        const game = this.state.games.filter(game => {\r\n            return game._id === gameId\r\n        })\r\n\r\n        if(name === \"total_qte\") {\r\n            game[0].total_qte = value\r\n        } else if(name === \"exposed_qte\") {\r\n            game[0].exposed_qte = value\r\n        } else if(name === \"zone\") {\r\n            game[0].zone = value\r\n        } else if(name === \"proto\") {\r\n            game[0].proto = value\r\n        } else if(name === \"state\") {\r\n            game[0].state = value\r\n        }\r\n\r\n        this.setState({\r\n            games: this.state.games\r\n        })\r\n    }\r\n\r\n    submit() {\r\n        this.state.editors = undefined\r\n        this.state.festival = undefined\r\n        ReservationHandler.updateReservation(this.state)\r\n            .then()\r\n        EditorHandler.updateEditor(this.state.exhibitor)\r\n            .then(() => this.setState({redirect: \"/nav/reservations\"}))\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return <Redirect to={this.state.redirect}/>\r\n        }\r\n        const options = [\r\n            \"En discussion\",\r\n            \"Pas de réponse\",\r\n            \"Considéré absent\",\r\n            \"Annulé\",\r\n            \"Confirmé\",\r\n            \"Liste jeux demandé\",\r\n            \"Liste jeux confirmé\"\r\n        ]\r\n\r\n        const optionsState = options.map(option =>\r\n            <option key={option} value={option}>{option}</option>\r\n        )\r\n\r\n        const contacts = this.state.exhibitor.contacts.map((contact, index) => {\r\n            return (\r\n                <>\r\n                    <FormControl\r\n                        as={\"input\"} type={\"text\"} value={contact} key={contact}\r\n                        onChange={this.handleContactsChange}\r\n                        name={index}/>\r\n                </>\r\n            )\r\n        })\r\n\r\n        const talks = this.state.talks.map((talk, index) =>\r\n            <>\r\n                <FormControl\r\n                    as={\"input\"} type={\"date\"} value={talk} key={talk}\r\n                    onChange={this.handleTalksChange} name={index}/>\r\n            </>\r\n        )\r\n\r\n        return (\r\n            <Form style={{margin: '2em'}}>\r\n                <Row className=\"justify-content-md-center\">\r\n                    <Col lg md xs>\r\n                        <Card bg={\"info\"} style={{height: \"25em\"}}>\r\n                            <Card.Header>\r\n                                <Card.Title>Exposant : {this.state.exhibitor.name}</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Col>\r\n                                    <FormGroup>\r\n                                        <Form.Label>Contact</Form.Label>\r\n                                        {contacts}\r\n                                    </FormGroup>\r\n                                </Col>\r\n                                <Button variant={\"warning\"} onClick={this.addContact}>Ajouter contact</Button>\r\n                                <Button variant={\"warning\"} onClick={this.removeContact}>Enlever contact</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n\r\n                    <Col>\r\n                        <Card bg={\"secondary\"} style={{height: \"25em\"}}>\r\n                            <Card.Header>\r\n                                <Card.Title>Statut de la réservation</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Col>\r\n                                    <FormGroup>\r\n                                        <Form.Label>état</Form.Label>\r\n                                        <FormControl\r\n                                            as={\"select\"} value={this.state.state}\r\n                                            onChange={this.handleChange} name={\"state\"}>\r\n                                            {optionsState}\r\n                                        </FormControl>\r\n                                    </FormGroup>\r\n                                </Col>\r\n\r\n                                <Col>\r\n                                    <FormGroup>\r\n                                        <Form.Label>Commentaire</Form.Label>\r\n                                        <FormControl\r\n                                            as={\"textarea\"} value={this.state.comment}\r\n                                            onChange={this.handleChange} name={\"comment\"}\r\n                                            rows={4}/>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    style={{marginTop: '2em'}}\r\n                    className={\"justify-content-md-center\"}\r\n                    lg md xs\r\n                >\r\n                    <Col lg={6} md={6} xs={6}>\r\n                        <Card bg={\"secondary\"}>\r\n                            <Card.Header>\r\n                                <Card.Title>Prise de contact</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <FormGroup>\r\n                                    {talks}\r\n                                </FormGroup>\r\n                                <Button variant={\"warning\"} onClick={this.addTalk}>Ajouter prise de contact</Button>\r\n                                <Button variant={\"warning\"} onClick={this.removeTalk}>Enlever prise de contact</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row\r\n                    style={{marginTop: \"2em\"}}\r\n                    className={\"justify-content-md-center\"}>\r\n                    <Col lg={9} md={9} xs={9}>\r\n                        <Card\r\n                            bg={\"dark\"}\r\n                            text={\"white\"}\r\n                        >\r\n                            <Card.Header>\r\n                                <Card.Title>Tables/m² réservés</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <Row style={{margin: \"1em\"}}>\r\n                                    <Col>\r\n                                        <FormGroup>\r\n                                            <Form.Label>Nombre de tables premium réservé</Form.Label>\r\n                                            <FormControl\r\n                                                as={\"input\"} value={this.state.nb_t_premium} id={\"1\"}\r\n                                                max={this.state.festival.nb_t_premium}\r\n                                                name={\"nb_t_premium\"} onChange={this.handleChange}/>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n\r\n                                    <Col>\r\n                                        <FormGroup>\r\n                                            <Form.Label>Nombre de tables standard réservé</Form.Label>\r\n                                            <FormControl\r\n                                                as={\"input\"} value={this.state.nb_t_standard} id={\"1\"}\r\n                                                max={this.state.festival.nb_t_standard}\r\n                                                name={\"nb_t_standard\"} onChange={this.handleChange}/>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n\r\n                                    <Col>\r\n                                        <FormGroup>\r\n                                            <Form.Label>Nombre de tables low réservé</Form.Label>\r\n                                            <FormControl\r\n                                                as={\"input\"} value={this.state.nb_t_low} id={\"1\"}\r\n                                                max={this.state.festival.nb_t_low}\r\n                                                name={\"nb_t_low\"} onChange={this.handleChange}/>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row style={{margin: \"1em\"}}>\r\n                                    <Col>\r\n                                        <FormGroup>\r\n                                            <Form.Label>Nombre de m² premium réservé</Form.Label>\r\n                                            <FormControl\r\n                                                as={\"input\"} value={this.state.nb_sm_premium} id={\"1\"}\r\n                                                max={this.state.festival.nb_sm_premium}\r\n                                                name={\"nb_sm_premium\"} onChange={this.handleChange}/>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n\r\n                                    <Col>\r\n                                        <FormGroup>\r\n                                            <Form.Label>Nombre de m² standards réservé</Form.Label>\r\n                                            <FormControl\r\n                                                as={\"input\"} value={this.state.nb_sm_standard} id={\"1\"}\r\n                                                max={this.state.festival.nb_sm_standard}\r\n                                                name={\"nb_sm_standard\"} onChange={this.handleChange}/>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n\r\n                                    <Col>\r\n                                        <FormGroup>\r\n                                            <Form.Label>Nombre de m² low réservé</Form.Label>\r\n                                            <FormControl\r\n                                                as={\"input\"} value={this.state.nb_sm_low} id={\"1\"}\r\n                                                max={this.state.festival.nb_sm_low}\r\n                                                name={\"nb_sm_low\"} onChange={this.handleChange}/>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n\r\n                                <Row style={{margin: \"1em\"}}>\r\n                                    <Col>\r\n                                        <FormGroup>\r\n                                            <Form.Label>Prix calculé</Form.Label>\r\n                                            <FormControl\r\n                                                as={\"input\"}\r\n                                                value={this.state.calculatedPrice}\r\n                                                readOnly/>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n\r\n\r\n                                    <Col>\r\n                                        <FormGroup>\r\n                                            <Form.Label>Prix négocié</Form.Label>\r\n                                            <FormControl\r\n                                                as={\"input\"} value={this.state.price}\r\n                                                min={this.state.calculatedPrice} type={\"number\"}\r\n                                                name={\"price\"} onChange={this.handleChange}/>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                    <Col lg={\"auto\"} md={\"auto\"} xs={\"auto\"}>\r\n                        <Card bg={\"secondary\"}>\r\n                            <Card.Header>\r\n                                <Card.Title>Spécifité</Card.Title>\r\n                            </Card.Header>\r\n                            <Card.Body>\r\n                                <FormGroup>\r\n                                    <Form.Label>Besoin de bénévoles ?</Form.Label>\r\n                                    <Form.Check\r\n                                        checked={this.state.need_volunteer}\r\n                                        onChange={this.handleChange} name={\"need_volunteer\"}/>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup>\r\n                                    <Form.Label>Editeur présent ?</Form.Label>\r\n                                    <Form.Check\r\n                                        checked={this.state.isEditorHere}\r\n                                        onChange={this.handleChange} name={\"isEditorHere\"}/>\r\n                                </FormGroup>\r\n\r\n                                <FormGroup>\r\n                                    <Form.Label>Compte rendu envoyé ?</Form.Label>\r\n                                    <Form.Check\r\n                                        checked={this.state.reportSent}\r\n                                        onChange={this.handleChange} name={\"reportSent\"}/>\r\n                                </FormGroup>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                <Row\r\n                    style={{marginTop: \"2em\"}}\r\n                >\r\n                    <Col>\r\n                        <Card\r\n                            bg={\"light\"}\r\n                        >\r\n\r\n                            <Card.Header>\r\n                                <Card.Title>Jeux réservés</Card.Title>\r\n                                <Card style={{width: '4rem'}}>\r\n                                    <FormContainer\r\n                                        title={\"Ajouter un jeux à l'éditeur\"}\r\n                                        component={\"GamesBookedForm\"}\r\n                                        reservationId={this.state._id}\r\n                                        handleClick={this.handleAddGame}\r\n                                    />\r\n                                </Card>\r\n                            </Card.Header>\r\n\r\n                            <Card.Body>\r\n                                <GamesBookedTable\r\n                                    games={this.state.games}\r\n                                    handleDelete={this.handleDeleteGame}\r\n                                    handleChange={this.handleGameChange}\r\n                                />\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Button\r\n                    style={{marginTop: \"1em\"}}\r\n                    variant={\"outline-success\"}\r\n                    onClick={this.submit}>Sauvegarder</Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ReservationDetail\r\n","import {Component} from \"react\"\r\nimport {Table} from \"react-bootstrap\";\r\n\r\nconst GameHandler = require(\"./GamesHandler\")\r\n\r\nclass GameTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.rows = []\r\n        this.state = {\r\n            rows: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let rows = GameHandler.createGames(this.props.response)\r\n        if(this.props.filter === \"name\") {\r\n            rows = GameHandler.filterGamesByName(this.props.response, this.props.filterText.toLowerCase())\r\n        }\r\n        else if(this.props.filter === \"category\") {\r\n            rows = GameHandler.filterGamesByCategory(this.props.response, this.props.filterText.toLowerCase())\r\n        } else if(this.props.filter === \"editor\") {\r\n            rows = GameHandler.filterGamesByEditor(this.props.response, this.props.filterText.toLowerCase())\r\n        } else if(this.props.filter === \"zone\") {\r\n            rows = GameHandler.filterGamesByZone(this.props.response, this.props.filterText.toLowerCase())\r\n        } else if(this.props.filter === \"state\") {\r\n            rows = GameHandler.filterGamesByState(this.props.response, this.props.filterText.toLowerCase())\r\n        }\r\n        return (\r\n            <Table striped bordered hover size={\"sm\"}>\r\n                <thead>\r\n                <tr>\r\n                    <th>Nom du jeu</th>\r\n                    <th>Editeur</th>\r\n                    <th>Etat</th>\r\n                    <th>Catégorie</th>\r\n                    <th>Durée en minutes</th>\r\n                    <th>Âge requis</th>\r\n                    <th>Zone</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>{rows}</tbody>\r\n            </Table>\r\n    )\r\n    }\r\n}\r\n\r\nexport default GameTable\r\n","import {Component} from \"react\"\r\n\r\nimport GameTable from \"./GameTable\"\r\nimport SearchBar from \"../search/Search\";\r\nimport Filter from \"../search/Filter\";\r\nimport {Card, Table} from \"react-bootstrap\";\r\nimport FormContainer from \"../Modal/FormContainer\"\r\n\r\n// TODO faire un tabs comme editeur pour tous les jeux ou les jeux du festival courant\r\nclass FilterableGamesTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            filterText: \"\",\r\n            filterEnglish: \"name\",\r\n            filterFrench: \"nom\"\r\n        }\r\n\r\n        this.handleFilterTextChange = this.handleFilterTextChange.bind(this)\r\n        this.handleFilterChange = this.handleFilterChange.bind(this)\r\n    }\r\n\r\n    handleFilterTextChange(filterText) {\r\n        this.setState({\r\n            filterText: filterText\r\n        })\r\n    }\r\n\r\n    handleFilterChange(filterEnglish, filterFrench) {\r\n        this.setState({\r\n            filterEnglish: filterEnglish,\r\n            filterFrench: filterFrench\r\n        })\r\n    }\r\n\r\n    // TODO faire état du jeu de la résa\r\n    render() {\r\n        let form\r\n        if(this.props.showForm) {\r\n            form = (\r\n                <Card style={{width: '4rem'}}>\r\n                    <FormContainer\r\n                        title={\"Ajouter un jeu\"}\r\n                        component={\"GameForm\"}\r\n                        handleClick={this.props.handleClick}/>\r\n                </Card>\r\n                )\r\n        }\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <Filter\r\n                                filters={[\r\n                                    {english: \"name\", french: \"nom\"},\r\n                                    {english: \"editor\", french: \"éditeur\"},\r\n                                    {english: \"state\", french: \"état\"},\r\n                                    {english: \"category\", french: \"catégorie\"},\r\n                                    {english: \"zone\", french: \"zone\"}\r\n                                ]}\r\n                                onFilterChange={this.handleFilterChange}\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <SearchBar\r\n                                filterText={this.state.filterText}\r\n                                filter={{english: this.state.filterEnglish, french: this.state.filterFrench}}\r\n                                onFilterTextChange={this.handleFilterTextChange}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </Table>\r\n                {form}\r\n                <GameTable\r\n                    response={this.props.games}\r\n                    filterText={this.state.filterText}\r\n                    filter={this.state.filterEnglish}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterableGamesTable\r\n","import {Component} from \"react\"\r\nimport {Tab, Tabs} from \"react-bootstrap\";\r\nimport FilteredGamesTable from \"./FilteredGamesTable\";\r\n\r\nconst GameHandler = require(\"./GamesHandler\")\r\n\r\nclass TabsGames extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            games: [],\r\n            gamesBooked: []\r\n        }\r\n        this.handleAddGames = this.handleAddGames.bind(this)\r\n        this.handleDelete = this.handleDelete.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        GameHandler.getGamesFromDB()\r\n            .then(games => {\r\n                this.setState({\r\n                    games: games\r\n                })\r\n            })\r\n        GameHandler.getFestivalGames()\r\n            .then(games => {\r\n                games.map(game => game.editor = undefined)\r\n                this.setState({gamesBooked: games})\r\n            })\r\n            .then(() => this.state.gamesBooked.map(game =>\r\n                GameHandler.getGameFromDB(game.game._id)\r\n                    .then(res => game.game = res)\r\n            ))\r\n            .then(() => this.setState({gamesBooked: this.state.gamesBooked}))\r\n        GameHandler.setHandleDelete(this.handleDelete)\r\n    }\r\n\r\n    handleAddGames(game) {\r\n        GameHandler.addGames(game)\r\n            .then(response => response.json())\r\n            .then(response => game._id = response.gameId)\r\n            .then(() => this.state.games.push(game))\r\n            .then(() => this.setState({games: this.state.games}))\r\n    }\r\n\r\n    handleDelete(gameId) {\r\n        this.setState({\r\n            games: this.state.games.filter(game => {\r\n                return game._id !== gameId\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Tabs\r\n                defaultActiveKey=\"allGames\"\r\n            >\r\n                <Tab eventKey=\"allGames\" title=\"Jeux\">\r\n                    <FilteredGamesTable\r\n                        games={this.state.games}\r\n                        handleClick={this.handleAddGames}\r\n                        showForm={true}\r\n                    />\r\n                </Tab>\r\n                <Tab eventKey=\"festivalGames\" title=\"Jeu du festival\">\r\n                    <FilteredGamesTable\r\n                        games={this.state.gamesBooked}\r\n                        showForm={false}\r\n                    />\r\n                </Tab>\r\n            </Tabs>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TabsGames\r\n","import {Component} from \"react\"\r\nimport {Table} from \"react-bootstrap\";\r\n\r\nconst ZoneHandler = require(\"./ZonesHandler\")\r\n\r\nclass ZoneTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.rows = []\r\n        this.state = {\r\n            rows: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let rows\r\n        if(this.props.filter === \"name\") {\r\n            rows = ZoneHandler.filterZonesByName(this.props.response, this.props.filterText.toLowerCase())\r\n        }\r\n        return (\r\n            <Table striped bordered hover size={\"sm\"}>\r\n                <thead>\r\n                <tr>\r\n                    <th>Nom de la zone</th>\r\n                    <th>Capacité en m²</th>\r\n                    <th/>\r\n                </tr>\r\n                </thead>\r\n                <tbody>{rows}</tbody>\r\n            </Table>\r\n    )\r\n    }\r\n}\r\n\r\nexport default ZoneTable\r\n","import {Component} from \"react\"\r\n\r\nimport ZoneTable from \"./ZoneTable\"\r\nimport SearchBar from \"../search/Search\";\r\nimport Filter from \"../search/Filter\";\r\nimport {Card, Table} from \"react-bootstrap\";\r\nimport FormContainer from \"../Modal/FormContainer\"\r\n\r\nconst ZoneHandler = require(\"./ZonesHandler\")\r\n\r\n// TODO faire un tabs comme editeur pour tous les jeux ou les jeux du festival courant\r\nclass FilterableZonesTable extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            zones: [],\r\n            filterText: \"\",\r\n            filterEnglish: \"name\",\r\n            filterFrench: \"nom\"\r\n        }\r\n\r\n        this.handleFilterTextChange = this.handleFilterTextChange.bind(this)\r\n        this.handleFilterChange = this.handleFilterChange.bind(this)\r\n        this.handleAddZone = this.handleAddZone.bind(this)\r\n        this.handleDelete = this.handleDelete.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        ZoneHandler.getZonesFromDB()\r\n            .then(zones => this.setState({zones: zones}))\r\n        ZoneHandler.setHandleDelete(this.handleDelete)\r\n    }\r\n\r\n    handleFilterTextChange(filterText) {\r\n        this.setState({\r\n            filterText: filterText\r\n        })\r\n    }\r\n\r\n    handleFilterChange(filterEnglish, filterFrench) {\r\n        this.setState({\r\n            filterEnglish: filterEnglish,\r\n            filterFrench: filterFrench\r\n        })\r\n    }\r\n\r\n    handleAddZone(zone) {\r\n        ZoneHandler.addZones(zone)\r\n            .then(response => response.json())\r\n            .then(res => this.state.zones.push(res))\r\n            .then(() => this.setState({zones: this.state.zones}))\r\n    }\r\n\r\n    handleDelete(zoneId) {\r\n        this.setState({\r\n            zones: this.state.zones.filter(zone => {\r\n                return zone._id !== zoneId\r\n            })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Table striped bordered hover>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <Filter\r\n                                filters={[\r\n                                    {english: \"name\", french: \"nom\"}\r\n                                ]}\r\n                                onFilterChange={this.handleFilterChange}\r\n                            />\r\n                        </td>\r\n                        <td>\r\n                            <SearchBar\r\n                                filterText={this.state.filterText}\r\n                                filter={{english: this.state.filterEnglish, french: this.state.filterFrench}}\r\n                                onFilterTextChange={this.handleFilterTextChange}\r\n                            />\r\n                        </td>\r\n                    </tr>\r\n                    </tbody>\r\n                </Table>\r\n                <Card style={{width: '4rem'}}>\r\n                    <FormContainer\r\n                        title={\"Ajouter une zone\"}\r\n                        component={\"ZoneForm\"}\r\n                        handleClick={this.handleAddZone}/>\r\n                </Card>\r\n                <ZoneTable\r\n                    response={this.state.zones}\r\n                    filterText={this.state.filterText}\r\n                    filter={this.state.filterEnglish}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FilterableZonesTable\r\n","import {Component} from \"react\"\r\nimport {Redirect} from \"react-router-dom\"\r\nimport {Card, Form, FormControl, FormGroup} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport GameTable from \"../games/GameTable\";\r\nimport FormContainer from \"../Modal/FormContainer\";\r\n\r\nconst ZonesHandler = require(\"./ZonesHandler\")\r\nconst GameHandler = require('../games/GamesHandler')\r\n\r\nclass ZoneDetail extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            _id: \"\",\r\n            label: \"\",\r\n            sm_capacity: \"\",\r\n            games: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.submit = this.submit.bind(this)\r\n        this.handleAddGame = this.handleAddGame.bind(this)\r\n        this.handleDeleteGame = this.handleDeleteGame.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        ZonesHandler.getZoneFromDB(window.location.href.split('/')[5])\r\n            .then(res => this.setState({\r\n                _id: res._id,\r\n                label: res.label,\r\n                sm_capacity: res.sm_capacity,\r\n                gamesId: res.games\r\n            }))\r\n            .then(() => this.state.gamesId.map(game =>\r\n                GameHandler.getGameFromDB(game.game)\r\n                .then(res => this.state.games.push(res))\r\n                .then(() => this.setState({games: this.state.games})))\r\n            )\r\n        GameHandler.setHandleDelete(this.handleDeleteGame)\r\n    }\r\n\r\n    handleAddGame(game) {\r\n        this.state.games.push(game)\r\n        this.setState({games: this.state.games})\r\n    }\r\n\r\n    handleDeleteGame(event) {\r\n        this.setState({\r\n            games: this.state.games.filter(game => {\r\n                return game._id !== event.target.name\r\n            })\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.type === 'checkbox' ? target.checked : target.value;\r\n        const name = target.name;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    submit() {\r\n        this.state.gamesId = undefined\r\n        this.state.games = this.state.games.map(game => {\r\n            return {game: game._id}\r\n        })\r\n        ZonesHandler.updateZone(this.state)\r\n            .then(() => this.setState({redirect: \"/nav/zones\"}))\r\n    }\r\n\r\n    render() {\r\n        if(this.state.redirect) {\r\n            return <Redirect to={this.state.redirect}/>\r\n        }\r\n\r\n        return (\r\n            <Form style={{margin: '1em'}}>\r\n                <FormGroup>\r\n                    <Form.Label>Nom de zones</Form.Label>\r\n                    <FormControl\r\n                        as={\"input\"} value={this.state.label} type={\"text\"}\r\n                        onChange={this.handleChange} name={\"label\"}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Form.Label>Capacité</Form.Label>\r\n                    <FormControl\r\n                        as={\"input\"} value={this.state.sm_capacity} type={\"text\"}\r\n                        onChange={this.handleChange} name={\"sm_capacity\"}/>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <Form.Label>Jeux de la zone</Form.Label>\r\n                    <Card style={{width: '4rem'}}>\r\n                        <FormContainer\r\n                            title={\"Ajouter un jeu à la zone\"}\r\n                            component={\"GameZoneForm\"}\r\n                            zone={this.state._id}\r\n                            handleClick={this.handleAddGame}/>\r\n                    </Card>\r\n                    <GameTable\r\n                        response={this.state.games}\r\n                        zone={this.state._id}\r\n                    />\r\n                </FormGroup>\r\n\r\n                <Button onClick={this.submit} variant={\"outline-success\"}>Sauvegarder</Button>\r\n            </Form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ZoneDetail\r\n","import './App.css';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport {Navbar, Nav} from \"react-bootstrap\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\n\r\n\r\nimport FormSignIn from \"./component/signIn/FormSignIn\"\r\nimport FilteredFestivalsTable from \"./component/festivals/FilteredFestivalsTable\"\r\nimport FilteredBillsTable from \"./component/bills/FilteredBillsTable\"\r\nimport EditorTabs from \"./component/editor/EditorTabs\"\r\nimport TabsReservations from \"./component/reservations/TabsReservations\";\r\nimport EditorDetail from \"./component/editor/EditorDetail\";\r\nimport GameDetail from \"./component/games/GameDetail\";\r\nimport ReservationDetail from \"./component/reservations/ReservationDetail\";\r\nimport TabsGames from \"./component/games/TabsGames\";\r\nimport FilteredZonesTable from \"./component/zone/FilteredZonesTable\";\r\nimport ZoneDetail from \"./component/zone/ZoneDetail\";\r\n\r\nfunction App() {\r\n  return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Route path=\"/nav\">\r\n            <Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n              <Navbar.Brand href=\"/nav/festivals\">Le festival du jeu</Navbar.Brand>\r\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\r\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"mr-auto\">\r\n                  <Nav.Link href=\"/nav/festivals\">Festivals</Nav.Link>\r\n                  <Nav.Link href=\"/nav/jeux\">Jeux</Nav.Link>\r\n                  <Nav.Link href=\"/nav/editeurs\">Éditeur</Nav.Link>\r\n                  <Nav.Link href=\"/nav/reservations\">Réservations</Nav.Link>\r\n                  <Nav.Link href=\"/nav/zones\">Zones</Nav.Link>\r\n                  <Nav.Link href=\"/nav/factures\">Factures</Nav.Link>\r\n                </Nav>\r\n                <Nav>\r\n                  <Nav.Link href=\"/\">Deconnexion</Nav.Link>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Navbar>\r\n          </Route>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              <Redirect to= \"/login\"/>\r\n            </Route>\r\n            <Route path=\"/login\" component={FormSignIn}/>\r\n\r\n            <Route path=\"/nav/festivals\">\r\n              <FilteredFestivalsTable/>\r\n            </Route>\r\n\r\n            <Route path=\"/nav/editeurs\">\r\n              <EditorTabs/>\r\n            </Route>\r\n\r\n            <Route path=\"/nav/editeur/:id\">\r\n              <EditorDetail/>\r\n            </Route>\r\n\r\n            <Route path=\"/nav/jeux\">\r\n              <TabsGames/>\r\n            </Route>\r\n\r\n            <Route path=\"/nav/jeu/:id\">\r\n              <GameDetail/>\r\n            </Route>\r\n\r\n            <Route path=\"/nav/reservations\">\r\n              <TabsReservations/>\r\n            </Route>\r\n\r\n            <Route path=\"/nav/reservation/:id\">\r\n              <ReservationDetail/>\r\n            </Route>\r\n\r\n            <Route path=\"/nav/zones\">\r\n              <FilteredZonesTable/>\r\n            </Route>\r\n\r\n            <Route path=\"/nav/zone/:id\">\r\n              <ZoneDetail/>\r\n            </Route>\r\n\r\n            <Route path=\"/nav/factures\">\r\n              <FilteredBillsTable/>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}